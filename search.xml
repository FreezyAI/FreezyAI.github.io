<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>品茶</title>
      <link href="2021/09/20/pin-cha/"/>
      <url>2021/09/20/pin-cha/</url>
      
        <content type="html"><![CDATA[<p><strong>品茶</strong></p><p>　　西安城里，有一帮弄艺术的人物，常常相邀着去各家，吃着烟茶聊聊闲话。有时激动起来，谈得通宵达旦，有时却沉默了，那么无言儿待过半天;但差不多十天半月，便又要去一番走动呢。忽有一日，其中有叫子兴的，打了电话，众朋友就相约去他家了。</p><p>　　子兴是位诗人，文坛上很有名望，这帮人中，该他为佼佼者。但他没有固定的住处，总是为着房子颠簸。三个月前，托人在南郊租得一所农舍，本应是邀众友而去，却突然又到西湖参加了一个诗会，得了本年度的诗奖。众人便想，诗人正在得意，又迁居了新屋，吃茶闲话，一定是有别样的滋味了。</p><p>　　正是三月天，城外天显得极高，也极清。田野酥软软的，草发得十分嫩，其中有蒲公英，一点一点的淡黄，使人心神儿几分荡漾了。远远看着杨柳，绿得有了烟雾，晕得如梦一般，禁不住近去看时，枝梢却并没叶片，皮下的脉络是楚楚地流动着绿。</p><p>　　路上行人很多，有的坐着车，或是谋事;有的挑着担，或是买卖春光悄悄儿走来，只有他们这般儿悠闲，醺醺然，也只有他们深得这春之妙味了。</p><p>　　打问该去的村子，旁人已经指点，问及子兴，却皆不知道，讲明是在这里住着的一位诗人，答者更是莫解，末了说：</p><p>　　“是×书记的小舅子吗?那是在前村。”</p><p>　　大家啼笑皆非，喟叹良久，凄凄伤感起来：书记的小舅子村人尽知，诗人却不知其然，往日意气洋洋者，原来是这样的可怜啊!</p><p>　　过了一道浅水，水边蹲着一个牧童，正用水洗着羊身。他们不再说起诗人，打问子兴家，牧童凝视许久，挥手一指村头，依然未言。村头是一高地，稀落一片桃林，桃花已经开子，灼灼的，十分耀眼。众人过了小桥，桃林里很静，扫过一股风，花瓣落了许多。深走五百米远，果然有一座土屋，墙虽没抹灰，但泥搪得整洁，瓦蓝瓦蓝的，不曾生着绿苔。门前一棵荚子槐，不老，也不弱，高高撑着枝叶，像一柄大伞。东边窗下，三根四根细竹，清楚得动人。往远，围一道篱笆，篱笆外的甬道，铺着各色卵石，随坡势上下，卵石纹路齐而旋转，像是水流。中堂窗开着，子兴在里边坐着吟诗，摇头晃脑，得意得有些忘形。</p><p>　　众人呼叫一声，子兴喜欢地出来，拉客进门，先是话别叙情，再是阔谈得奖。亲热过后，自称有茶相待，就指着后窗说：好茶要有好水，特让妻去深井汲水去了。</p><p>　　从后窗看去，果然主妇正好在村口井台上排队，终轮到了，扳着轱辘，颤着绳索，咿咿呀呀地响。末了提了水罐，笑吟吟地一路回来了。</p><p>　　众人看着房子，说这地方毕竟还好，虽不繁华，难得清静，虽不方便，却也悠暇，又守着这桃花井水，也是“人生以此足也”。这么说着，主妇端上茶来，这茶吃得讲究，全不用玻璃杯子，一律细瓷小碗。子兴让众人静静坐了，慢慢饮来，众人窃窃笑，打开碗盖，便见水面浮一层白气，白气散开，是一道道水痕纹，好久平复了。子兴说，先呷一小口，吸气儿慢慢咽下，众人就骂一句“穷讲究”，一口先喝下了半碗。</p><p>　　君子相交一杯茶，这么喝着，谈着，时光就不知不觉消磨过去，谁也不知道说了多少话，说了什么话，茶一壶一壶添上来，主妇已经是第五次烧火了。不知什么时候，话题转到路上的事，茶席上不免又一番叹息，嘲笑诗人不如弃笔为政，继而又说“阳春白雪，和者盖寡”，自命清高。子兴苦笑着，站起来说：</p><p>　　“别自看自大，还是多吃茶吧!怎么样，这茶好吗?”</p><p>　　众人说：“一般。”</p><p>　　“甚味?”</p><p>　　“无味。”</p><p>　　“要慢慢地品。”</p><p>　　“很清。”</p><p>　　“再品。”</p><p>　　“很淡。”</p><p>　　子兴不断地启发，回答都不使他满意，他有些遗憾了，说：“这是龙井名茶啊!”</p><p>　　这竟使众人都大惊了。他们住在这里，一向是喝着陕青茶，从来只知喝茶就是喝那比水好喝一点的黄汤，从来不知茶的品法;老早听说龙井是茶中之王，如今喝了半天了，竟没有喝出特别的味儿来，真可谓蠢笨，便怨恨子兴事先不早说明，又责怪这龙井盛名难副，深信“看景不如听景”这一俗语的真理了。</p><p>　　“好东西为什么这么无味呢?”</p><p>　　大家觉得好奇，谈话的主题就又转移到这茶了。众说不一，各自阐发着自己的见解。</p><p>　　画家说：“水是无色，色却最丰。”</p><p>　　戏剧家说：“静场便是高潮。”</p><p>　　诗人说：“不说出的地方，正是要说的地方。”</p><p>　　小说家说：“真正的艺术是忽视艺术的。”</p><p>　　子兴说：“无味而至味。”</p><p>　　评论家说：“这正如你一样，有名其实无名，无乐其实大乐也!”</p><p>　　众人哈哈一笑，站起身来，说时间不早了，该回家去了，就走出门来，在桃林里站了会，觉得今日这茶品得无味，话也说得无聊，又笑了几声，就各自散了。</p><p>　　作于1981年5月17日午西安</p><hr><p>　　<strong>【导读】</strong></p><p>　　<strong>无味而至味</strong></p><p>　　《品茶》和《茶事》不一样，虽然都是写茶，《茶事》是回忆与茶有关的事情，《品茶》则在一个“品”字。</p><p>　　文章主要是写一帮朋友到一位叫子兴的诗人家品茶。大家兴致颇高、期待极大，一则是子兴刚在南郊租得一所农舍，二则子兴刚从西湖捧得本年度诗奖归来。</p><p>　　因为去处是在郊区，一行人也算是顺便来了一次踏青，边走边欣赏了城郊的初春景色。“天显得极高，也极清”“田野酥软软的”“草发得十分嫩”“远远看着杨柳，绿得有了烟雾”，路上行人“悠闲，醺醺然”。作者说，“也只有他们深得这春之妙味”。什么妙味?也许是一种淡淡的柔软的蕴藏着生机的味道。路途中，打听子兴住处时还闹了笑话。问村民一位叫子兴的诗人家在哪里，答者说：“是某书记的小舅子吗?”大家凄凄感伤起来，村民只知道书记的小舅子，却不知道诗人，子兴究竟是有名呢?还是无名呢?也许是“阳春白雪，和者盖寡”。吸取了教训，不再提诗人名号，只问子兴。终于在一片桃花林深处，看见摇头吟诗的子兴。子兴的农舍异常拙朴，土屋篱笆、荚子槐细竹。</p><p>　　接下来就进入此行的目的——品茶。子兴特地让妻子去深井汲水煮水，用细瓷小碗泡茶，并且叮嘱要“先呷一小口，吸气儿慢慢咽下”。大家全然不放在心上，一边猛喝半碗茶一边闲聊。作者说“君子相交一杯茶”，这句话既道出了朋友间的君子之交，也道出了他们的品味追求。贾平凹曾经说过“吃茶是品格的表现，是情操的表现，是在浑浊世事中清醒的表现”。然而，这次的品茶，终究还是匆匆而过，大家更惬意于那天南海北的闲聊。读到这里，读者也会有困惑。文章题目叫《品茶》，可是作者并没有渲染笔墨来“品”茶，读得甚是无味。其实文章至味在最后。</p><p>　　子兴最后问大家，茶如何。大家说“一般”“无味”“很清”“很淡”子兴很是失望，最后告诉大家，这是龙井名茶。大家不能接受这个事实，责怪子兴事先不说明，其实从之前子兴郑重其事地层层铺垫(井水、瓷碗)，就应该能猜到今天品的是名茶。又怪龙井盛名难副。最后讨论“好东西为什么这么无味呢?”众人的一番见解应该是全篇最具意蕴的地方。</p><p>　　画家说：“水是无色，色却最丰。”</p><p>　　戏剧家说：“静场便是高潮。”</p><p>　　诗人说：“不说出的地方，正是要说出的地方。”</p><p>　　小说家说：“真正的艺术是忽视艺术。”</p><p>　　子兴说：“无味而至味。”</p><p>　　评论家说：“这正如你一样，有名其实无名，无乐其实大乐也!”</p><p>　　品“无味”的龙井名茶，而至品各种艺术“无味”的境界。拓展了意蕴，回味无穷。子兴的一句“无味而至味”，道出了所有艺术的至高境界，同时也使得子兴的形象立即饱满起来。评论家评子兴的话呼应了前文村民不认识诗人的情节，呼应了子兴隐于世俗中的清雅。</p><p>　　我们读《品茶》这篇文章，其实也是一个“品”的过程。慢慢读、细细品，读到最后，才能品出作者真正要表达的东西。苏东坡在《浣溪沙·细雨斜风作晓寒》中说“人间有味是清欢”。“西安城里，有一帮弄艺术的人物，常常相邀着去各家，吃着烟茶，聊聊闲话。”这何尝不是清欢?</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>龙樱</title>
      <link href="2021/06/14/long-ying/"/>
      <url>2021/06/14/long-ying/</url>
      
        <content type="html"><![CDATA[<p>　　入学考试的问题，答案往往只有一个，如果没有找到它，那就是不合格，这真的很残酷，但是啊——人生不一样，人生有很多正确答案，继续读大学是正确答案，不去也是，热衷运动也是，喜欢音乐也好，和朋友一起玩耍也罢，为了某人而绕远路也是，这些都是正确答案，所以，不要畏惧活着，不管考上还是没考上，都不要否定自己的可能性，你们要挺起胸膛，理直气壮的活着！</p><p>–《龙樱》</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+github 搭建博客 (超级详细版，精细入微)</title>
      <link href="2021/03/27/hexo-github-da-jian-bo-ke-chao-ji-xiang-xi-ban-jing-xi-ru-wei/"/>
      <url>2021/03/27/hexo-github-da-jian-bo-ke-chao-ji-xiang-xi-ban-jing-xi-ru-wei/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>你了解 <a href="https://hexo.io/zh-cn/">Hexo</a> 吗？ Hexo 是一个静态博客框架，基于 Node.js，将 Markdown 文章通过渲染引擎，生成一个静态网页，再结合 Git 命令（ssh），Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p>几个月前偶然间了解到了 Hexo 这个静态博客网站，很适合那些喜欢写作的朋友们，最重要的是它是免费的，里面有许多的博客主题模板，这些主题都是一些很牛的大佬们开发的，而且设计的主题都很棒，让我很心动，心动不如行动，于是开始整理搭建属于自己的博客。直到今天，这中间经历了许多的坎坷荆棘，我将我的博客搭建的流程分享出来，能为那些博客小石榴们提供一些帮助吧，如果有错的话，请给我留言，我会及时修改，废话不多说，直接上教程。</p><blockquote><p><strong>如果下面的教程有错误之处，请在评论区留言，收到后，我会尽快修改，谢谢支持！</strong></p></blockquote><h1 id="一、博客环境搭建"><a href="#一、博客环境搭建" class="headerlink" title="一、博客环境搭建"></a>一、博客环境搭建</h1><blockquote><p>本文系统环境信息：Win10 专业版，64 位（10.0 版本 18362）</p><p>Node.js：12.13.0 Git：2.24.0</p><p>修改配置文件要用到的软件（可选）：</p><ol><li><a href="https://code.visualstudio.com/">Visual Studio Code</a>（适合有开发基础的程序员，非常好用）</li><li>Sublime Text3，可免费使用，<a href="https://pan.baidu.com/s/1uKA-aBHm_CsmJI5GolrV1Q">百度网盘</a>（提取码：mh0y）</li><li><a href="https://notepad-plus-plus.org/downloads/">NodePad++</a> 7.8.1（最新的，也可以在官网选择其他版本）</li></ol></blockquote><h2 id="1-下载-Git-和-Node-js"><a href="#1-下载-Git-和-Node-js" class="headerlink" title="1. 下载 Git 和 Node.js"></a>1. 下载 Git 和 Node.js</h2><h3 id="1-1-Node-js-的安装与配置"><a href="#1-1-Node-js-的安装与配置" class="headerlink" title="1.1 Node.js 的安装与配置"></a>1.1 Node.js 的安装与配置</h3><p>首先去 <a href="https://nodejs.org/en/download/">Node.js 官网</a> 下载 node.js 的安装程序，根据你电脑系统的配置信息，下载对应的安装程序，然后开始进行下面的步骤。</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/nodejs-0.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/nodejs-0.png" alt="Node.js下载以及版本的选择"></a></p><p>Node.js 下载以及版本的选择</p><p>下载好与电脑系统对应的安装程序后，开始安装流程：</p><ol><li>打开下载好的 Node.js 安装程序，点击 Next，进行下一步的安装；</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-1.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-1.png" alt="img"></a></p><p>img</p><ol><li>将”I accept the terms in the License Agreement” 前面的复选框勾选，同意安装协议，再点击 Next，进行下一步操作；</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-2.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-2.png" alt="img"></a></p><p>img</p><ol><li>选择 Node.js 安装程序的安装位置，在这里我以”C:\Program Files\nodejs” 为例，点击 Next，进入下一步操作；</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-3.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-3.png" alt="img"></a></p><p>img</p><ol><li>选择安装的模块和功能，这里全部安装，并添加到系统环境变量 ，继续点击 Next，进入下一步操作；</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-4.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-4.png" alt="img"></a></p><p>img</p><ol><li>这一步可以跳过，这个选项的意思是安装一些编译本地模块的工具，比如 python，C/C++ 等，点击 Next，进入下一步；</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-5.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-5.png" alt="img"></a></p><p>img</p><ol><li>点击”Install”，等待 Node.js 安装完成；</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-6.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-6.png" alt="img"></a></p><p>img</p><ol><li>当看到下图所显示的情况，Node.js 就成功安装完毕。</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-7.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-7.png" alt="img"></a></p><p>img</p><ol><li>验证安装，并测试 Node.js 是否加入环境变量，当出现如下图的情况，Node.js 安装大功告成。</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-8.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-8.png" alt="img"></a></p><p>img</p><p>如果执行 <code>node -v</code> 报错的话，那么手动将 Node.js 的安装路径添加到环境变量中，右击点击我的电脑 -&gt; 属性 -&gt; 高级系统设置 -&gt; 环境变量，在系统变量下找到名为 path 的变量名，如下图：</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117191107.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117191107.png" alt="img"></a></p><p>img</p><p>选中 path，或者双击，然后将你 node.js 的安装路径放在 path 变量值的最后面，如果添加之前 path 值最后有 英文的分号，则直接将路径添加进去即可，如果没有，先添加分号，然后点击保存，回到桌面，打开 cmd（Win+R），执行 <code>node -v</code>，看是否成功。</p><ol><li>设置 npm 的镜像源：</li></ol><pre><code>Code# 查看npm的配置npm config list# 默认源npm config set registry https://registry.npmjs.org# 临时改变镜像源npm --registry=https://registry.npm.taobao.org# 永久设置为淘宝镜像源npm config set registry https://registry.npm.taobao.org# 另一种方式，编辑 ~/.npmrc 加入下面内容registry = https://registry.npm.taobao.org</code></pre><ol><li>设置 npm 的内置路径 ——&gt; 全局模块路径和缓存路径（<em>可选</em>）</li></ol><p>如果不改变内置路径也可，除非你的 C 盘空间足够 bigger，这一步可以略过，不改变的话，它的路径在：</p><blockquote><p>此处参考：<a href="https://blog.csdn.net/jianleking/article/details/79130667">jyjin 的 node 环境变量配置，npm 环境变量配置</a></p></blockquote><ul><li>npm 包全局目录：</li></ul><pre><code>CodeC:/Users/[username]/AppData/Roaming/npm/node_modules</code></pre><ul><li>npm 包全局命令目录：</li></ul><pre><code>CodeC:/Users/[username]/AppData/Roaming/npm</code></pre><ul><li>npm 实际去找全局命令的目录：<code>C:/Users/[username]/.npmrc</code> 文件内容的 <code>prefix</code> 值</li><li>npm 包全局 cache 目录：<code>C:/Users/[username]/.npmrc</code> 文件内容的 <code>cache</code> 值</li></ul><p>首先在你 Node.js 的安装位置，新建两个文件夹，<code>node_global</code> 和 <code>node_cache</code>，我的路径是：</p><pre><code>CodeC:\Program Files\nodejs\node_globalC:\Program Files\nodejs\node_cache</code></pre><p>然后分别执行的命令就是：</p><pre><code>Codenpm config set prefix &quot;C:\Program Files\nodejs\node_global&quot;npm config set cache &quot;C:\Program Files\nodejs\node_cache&quot;</code></pre><p>然后在配置环境变量，右击我的电脑 -&gt; 属性 -&gt; 高级系统设置 -&gt; 环境变量同样的位置，在用户变量的地方，找到 path 变量进行修改，修改值如下图：</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-11.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-11.png" alt="img"></a></p><p>img</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-12.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-12.png" alt="img"></a></p><p>img</p><p>然后就大功告成了，Node.js 就安装完毕了，下面开始 Git 安装。👇👇👇</p><h3 id="1-2-Git-的安装与配置"><a href="#1-2-Git-的安装与配置" class="headerlink" title="1.2 Git 的安装与配置"></a>1.2 Git 的安装与配置</h3><p>首先就是去 <a href="https://git-scm.com/">Git 官网</a>下载 Git，根据你电脑系统的配置信息，下载对应的安装程序，然后开始进行下面的步骤。</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117193737.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117193737.png" alt="img"></a></p><p>img</p><ol><li>下载好 Git 的安装包，开始安装，打开安装包，出现如图的界面，点击 Next：</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-1.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-1.png" alt="img"></a></p><p>img</p><ol><li>选择你要安装的位置，我以 C 盘为例，路径为图中所示，安装到其他位置的话，点击 Browse，选择你要安装的位置，然后点击 Next，进入下一步：</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-2.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-2.png" alt="img"></a></p><p>img</p><ol><li>选择你是否创建桌面快捷放方式，其他默认即可，点击 Next，进入下一步：</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-3.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-3.png" alt="img"></a></p><p>img</p><ol><li>是否将 Git 快捷方式的目录加入开是菜单栏</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-4.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-4.png" alt="img"></a></p><p>img</p><ol><li>这个是选择文本编辑器的方式，默认是 Vim，也可以选择其他的方式，自主选择，在这里我选择的 Vim 默认方式。选择好文本编辑器的方式后，点击 Next，进入下一个流程：</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-5.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-5.png" alt="img"></a></p><p>img</p><ol><li>选择安装 Git 时对环境变量 PATH 的影响，第一种影响较小，第三种会影响到 Windows 的自带工具，默认勾选中间项，建议不要修改，直接点击 “Next” 继续安装：</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-6.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-6.png" alt="img"></a></p><p>img</p><ol><li>选择 Git 在使用 HTTPS 时使用的库，若无特殊需求，可保持默认选项，点击 “Next” 继续安装：</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-7.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-7.png" alt="img"></a></p><p>img</p><ol><li>选择提交与拉取记录时，对换行符的处理方式，若无特殊需要，默认选择即可，点击 “Next” 继续安装：</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-8.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-8.png" alt="img"></a></p><p>img</p><ol><li>选择模拟终端软件（即命令行窗口软件），若无特殊需要，可默认选择，点击 “Next” 继续安装：</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-9.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-9.png" alt="img"></a></p><p>img</p><ol><li>最新功能的询问，若不想尝试尚未保证稳定性的新功能，默认不勾选，点击 “Install” 即可完成安装：</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-10.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-10.png" alt="img"></a></p><p>img</p><ol><li>安装完成</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-11.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-11.png" alt="img"></a></p><p>img</p><ol><li>回到桌面，点击鼠标右键，会出现两个选项 <code>Git GUI Here</code> 和 <code>Git Bash Here</code>，在打开 Cmd (Win+R)，分别输入 <code>git</code> 和 <code>git --version</code>，如果出现如下图的情况，即安装成功！</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-12.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-12.png" alt="img"></a></p><p>img</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-13.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-13.png" alt="img"></a></p><p>img</p><h1 id="二、Github-注册以及-Github-Pages-创建"><a href="#二、Github-注册以及-Github-Pages-创建" class="headerlink" title="二、Github 注册以及 Github Pages 创建"></a>二、Github 注册以及 Github Pages 创建</h1><ol><li>打开 Github <a href="https://github.com/">官网首页</a>，点击右上角的 <strong>Sign Up</strong> ，然后在出现的页面上填写你的相关信息，进行注册：</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117203432.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117203432.png" alt="img"></a></p><p>img</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117204639.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117204639.png" alt="img"></a></p><p>img</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117204955.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117204955.png" alt="img"></a></p><p>img</p><p>验证完成后，点击 Next：Select a plan，会出现如上图的验证界面，同理，只需要将其中的动物调整为正向显示即可。接着会出现下图的界面，选择 Free，下方的两个选项可选可不选，点击 <strong>Continue</strong> 继续：</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117211431.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117211431.png" alt="img"></a></p><p>img</p><p>这时 Github 会给你发一封邮件，验证一下即可，验证过后才可以创建库。</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117212721.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117212721.png" alt="img"></a></p><p>img</p><p>验证完成后，开始创建库，如下图所示，仓库名创建格式必须为：<code>&lt;用户名&gt;.github.io</code>，<code>Description</code> 为描述仓库，自定义写，填写必要的描述，也可不填。勾选 <code>Initialize this repository with a README</code> 点击 <code>Creat repository</code> 进行创建。</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117212538.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117212538.png" alt="img"></a></p><p>img</p><p>然后就会出现如图所示的界面，即仓库创建成功！</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117213321.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117213321.png" alt="img"></a></p><p>img</p><p>我们来测试一下，点击 <code>Create new file</code>，出现如下界面，然后命名文件名为 <code>index.html</code>，在填写如图的内容，再点击 <code>Commit new file</code>，即创建成功，然后打开一个新的网页，输入网址 <code>https://&lt;你的用户名&gt;.github.io</code>，即可以看见一个新的网页，其中的内容就是你写的内容。</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117214029.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117214029.png" alt="img"></a></p><p>img</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117213957.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117213957.png" alt="img"></a></p><p>img</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117214450.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117214450.png" alt="img"></a></p><p>img</p><p>至此，Github 的注册以及 Github Pages 已经创建完成了。</p><h1 id="三、配置-Git-用户名和邮箱"><a href="#三、配置-Git-用户名和邮箱" class="headerlink" title="三、配置 Git 用户名和邮箱"></a>三、配置 Git 用户名和邮箱</h1><p>在桌面点击鼠标右键，点击 <code>Git Bash Here</code>，会出现一个界面如下图所示：</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117215118.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117215118.png" alt="img"></a></p><p>img</p><p>然后分别输入下面的两个命令，并回车：</p><pre><code>Codegit config --global user.name &quot;此处填写你注册时的用户名&quot;git config --global user.email &quot;此处填写你注册时的邮箱&quot;# 一般只要不报错，可以跳过下面寻找.gitconfig文件</code></pre><p>然后找到<code>.gitconfig</code> 文件，文件存放位置在 <code>C:/Users/[username]/.gitconfig</code>（未找到的话，请开启显示隐藏文件的功能），用编辑器打开，看到如下图所示的内容，即配置成功！</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117220016.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117220016.png" alt="img"></a></p><p>img</p><h1 id="四、本地安装-hexo-静态博客框架以及发布到-Github-Pages"><a href="#四、本地安装-hexo-静态博客框架以及发布到-Github-Pages" class="headerlink" title="四、本地安装 hexo 静态博客框架以及发布到 Github Pages"></a>四、本地安装 hexo 静态博客框架以及发布到 Github Pages</h1><ol><li>首先选择一个磁盘作为你博客文件的存放位置，然后新建一个文件夹，比如名为 blogtest 的文件夹，创建完后，先不要点进去，在此处点击鼠标右键，选择 <code>Git Bash Here</code>，然后依次输入如下命令，：</li></ol><pre><code>Code# hexo框架的安装npm install -g hexo-cli# 等上一个命令完成后，在输入下面的命令hexo init &lt;新建文件夹的名称&gt;  #初始化文件夹cd &lt;新建文件夹的名称&gt;npm install  # 安装博客所需要的依赖文件</code></pre><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117221129.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117221129.png" alt="img"></a></p><p>img</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117221144.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117221144.png" alt="img"></a></p><p>img</p><p>等待运行完成，此时文件夹中多了许多文件。 <strong>注意</strong>：<strong>后续的命令均需要在站点目录下（即文件夹内）使用 Git Bash 运行。</strong> 此时 Hexo 框架的本地搭建已经完成了。我们来运行一下看看，命令行依次输入以下命令 :</p><pre><code>Codehexo ghexo s</code></pre><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117221157.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117221157.png" alt="img"></a></p><p>img</p><p>浏览器中打开 <a href="http://xn--localhost:4000127-kd18a6585a.0.0.1:4000，可以看到一个网页，说明Hexo博客已经成功在本地运行。/">http://localhost:4000 或者 127.0.0.1:4000，可以看到一个网页，说明 Hexo 博客已经成功在本地运行。</a></p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117221206.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117221206.png" alt="img"></a></p><p>img</p><h2 id="1-本地博客发布到-Github-Pages"><a href="#1-本地博客发布到-Github-Pages" class="headerlink" title="1. 本地博客发布到 Github Pages"></a>1. 本地博客发布到 Github Pages</h2><p>之前的步骤中，我们已经完成了对 Github 账户的注册以及 Github Pages 的创建，接下来是将本地博客发布至 Github Pages。</p><ol><li>首先需要安装发布的插件，在站点目录下执行下面的命令，也就是创建的博客目录下：</li></ol><pre><code>Codenpm install hexo-deployer-git --save</code></pre><ol><li>紧接着，将本地目录与 GitHub 关联起来，输入下面的命令行：</li></ol><pre><code>Codessh-keygen -t rsa -C &quot;你的邮箱地址&quot;</code></pre><p>输入后一直回车，然后在 <code>C:/Users/[username]</code> 目录下找到名为<code>.ssh</code> 的文件夹， 文件夹内会有两个文件，一个 <code>id_rsa.pub</code> 一个 <code>id_rsa</code>，用文本编辑器打开 <code>id_rsa.pub</code>，复制里面的的内容。 然后打开 Github，点击右上角的头像 <strong>Settings</strong> 选择 <strong>SSH and GPG keys</strong></p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117222746.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117222746.png" alt="img"></a></p><p>img</p><p>点击 <strong>New SSH key</strong> 将之前复制的内容粘帖到 Key 的框中。 上面的 <strong>Title</strong> 可以随意，点击 <strong>Add SSH key</strong> 完成添加。</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117223049.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117223049.png" alt="img"></a></p><p>img</p><p>然后回到 Git 的命令行界面，测试一下是否与 GitHub 连接成功。输入下面的命令行：</p><pre><code>Codessh -T git@github.com</code></pre><p>点击回车，然后会出现一个询问内容，输入 <code>yes</code>，回车，会出现一段内容，<code>Hi ! You&#39;ve successfully authenticated, but GitHub doesnot provide shell access.</code>。 说明连接成功。此处这个 `` 应该是你 Github 的用户名。</p><ol><li>进入博客站点目录，用文本编辑器打开<code>_config.yml</code>，这个<code>_config.yml</code> 是博客的配置文件，在以后的博客修改，如个性化修改，博客 SEO 优化等都会使用到，修改如下图的几个地方：</li></ol><pre><code>Codetitle: 你的博客名subtitle: 博客的副标题，有些主题支持description: 博客描述keywords: 博客关键词author: 作者，在文章中显示language: 博客语言语种   timezone: 时区</code></pre><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117224138.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117224138.png" alt="img"></a></p><p>img</p><p>滑到文件最底部，有一个 deploy，在 deploy 下面添加一个 repo 项 ，一个 branch 项。填入如下代码，并如下图所示：</p><pre><code>Codetype: gitrepo: git@github.com:Github用户名/github用户名.github.io.git  //也可使用https地址，如：https://github.com/Github用户名/Github用户名.github.io.git            branch: master</code></pre><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117224151.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117224151.png" alt="img"></a></p><p>img</p><ol><li>最后就是生成页面，并发布至 Github Pages，执行如下命令：</li></ol><pre><code>Code# Hexo会根据配置文件渲染出一套静态页面hexo g# 将上一步渲染出的一系列文件上传至至Github Pageshexo d# 也可以直接输入此命令，直接完成渲染和上传hexo g -d</code></pre><p>上传完成后，在浏览器中打开 <strong>https://&lt;用户名&gt;.github.io</strong>，查看上传的网页。如果页面变成了之前本地调试时的样子，说明上传以及完成了。没变的话查看一下上传时命令行窗口的信息有没有错误信息，没有的话清除一下浏览器缓存试试。</p><h1 id="五、hexo-博客主题安装以及一些个性化修改"><a href="#五、hexo-博客主题安装以及一些个性化修改" class="headerlink" title="五、hexo 博客主题安装以及一些个性化修改"></a>五、hexo 博客主题安装以及一些个性化修改</h1><blockquote><p><strong>转自：</strong><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README.md">🇺🇸English Document</a> | <a href="https://blinkfox.github.io/">演示示例</a> | QQ 交流群 1（已满）: <a href="https://jq.qq.com/?_wv=1027&k=5zMDYHT"><code>926552981</code></a> | QQ 交流群 2（推荐）: <a href="https://jq.qq.com/?_wv=1027&k=53q2Ayp"><code>971887688</code></a></p><p>这是一个采用 <code>Material Design</code> 和响应式设计的 Hexo 博客主题。</p></blockquote><h2 id="主题特性"><a href="#主题特性" class="headerlink" title="主题特性"></a>主题特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持 <code>emoji</code> 表情，用 <code>markdown emoji</code> 语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 在线聊天功能。</li></ul><h2 id="1-主题下载与安装"><a href="#1-主题下载与安装" class="headerlink" title="1. 主题下载与安装"></a>1. 主题下载与安装</h2><p>点击 <a href="https://github.com/blinkfox/hexo-theme-matery">传送门</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的站点目录文件夹下使用 <code>git clone</code> 命令来下载：直接在站点根目录下执行下面的命令，即可进行主题的下载，主题有两个版本，稳定版本和最新版本 (不定期更新优化)，自主选择版本。</p><pre><code>Codegit clone https://github.com/blinkfox/hexo-theme-matery themes/matery     # 稳定版git clone -b develop https://github.com/blinkfox/hexo-theme-matery themes/matery   #最新版(不定期进行优化更新)</code></pre><p>如果主题下载速度比较慢的话，可以从我的码云仓库进行下载，我的码云仓库地址：<a href="https://gitee.com/yafine66/hexo-theme-matery">传送门</a></p><p>注意：在下载主题仓库之前，请先比对仓库更新时间是否与原作者仓库时间一致，如果一致，请执行下面的命令，如果不一致，请联系我进行仓库更新，当然你也可以自己进行相关的更新操作，自主选择！</p><pre><code>Codegit clone https://gitee.com/yafine66/hexo-theme-matery themes/matery     # 稳定版git clone -b develop https://gitee.com/yafine66/hexo-theme-matery themes/matery   #最新版(不定期进行优化更新)</code></pre><h2 id="2-主题配置"><a href="#2-主题配置" class="headerlink" title="2. 主题配置"></a>2. 主题配置</h2><h3 id="2-1-切换主题"><a href="#2-1-切换主题" class="headerlink" title="2.1 切换主题"></a>2.1 切换主题</h3><blockquote><p><strong>注意：</strong>首先需要明白什么是站点配置文件，什么是主题配置文件，站点配置文件就是根目录下的配置文件，比如我的博客文件在 <code>F:\blog</code> 下，那么站点配置文件就是 <code>F:\blog\_config.yml</code>，主题配置文件就是 <code>F:\blog\themes\matery\_config.yml</code>。</p><p>另外注意，配置文件中的标点符号不要出现中文格式的标点符号，不然运行会出错。</p></blockquote><p>主题下载完成后，将站点配置文件中的 <code>theme</code> 值修改为你下载主题的文件名，此处为 <code>matery</code>，那么值就修改为 <code>theme: matery</code>。</p><p>一些站点配置文件的其他地方的修改：</p><ul><li>语言选择：如果为中文用户，则在 <code>language:</code> 后添加值 <code>zh-CN</code>，如果不修改，默认为英语；</li><li>网址修改：<code>url:</code> 的值为你的网址名，如 <code>http://xxxx.github.io</code>，如果有域名，则修改为你的域名即可，至于有关域名的修改解析，后面我会说到，这里先不说了。</li><li>站点配置文件有个 <code>per_page属性</code>，建议修改为 6 的倍数，这样网站在适应设备时，有较好的显示效果。</li></ul><h3 id="2-2-新建标签-tags-页面"><a href="#2-2-新建标签-tags-页面" class="headerlink" title="2.2 新建标签 tags 页面"></a>2.2 新建标签 tags 页面</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre><code>Codehexo new page &quot;tags&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre><code>Code---title: tagsdate: 2018-09-30 18:23:38type: &quot;tags&quot;layout: &quot;tags&quot;---</code></pre><h3 id="2-3-新建分类-categories-页面"><a href="#2-3-新建分类-categories-页面" class="headerlink" title="2.3 新建分类 categories 页面"></a>2.3 新建分类 categories 页面</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre><code>Codehexo new page &quot;categories&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre><code>Code---title: categoriesdate: 2018-09-30 17:25:30type: &quot;categories&quot;layout: &quot;categories&quot;---</code></pre><h3 id="2-4-新建关于我-about-页面"><a href="#2-4-新建关于我-about-页面" class="headerlink" title="2.4 新建关于我 about 页面"></a>2.4 新建关于我 about 页面</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre><code>Codehexo new page &quot;about&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre><code>Code---title: aboutdate: 2018-09-30 17:25:30type: &quot;about&quot;layout: &quot;about&quot;---</code></pre><h3 id="2-5-新建留言板-contact-页面-可选"><a href="#2-5-新建留言板-contact-页面-可选" class="headerlink" title="2.5 新建留言板 contact 页面 (可选)"></a>2.5 新建留言板 contact 页面 (可选)</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre><code>Codehexo new page &quot;contact&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre><code>Code---title: contactdate: 2018-09-30 17:25:30type: &quot;contact&quot;layout: &quot;contact&quot;---</code></pre><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的 “<strong>菜单</strong>” 配置，取消关于留言板的注释即可。</p></blockquote><h3 id="2-6-新建友情链接-friends-页面-可选"><a href="#2-6-新建友情链接-friends-页面-可选" class="headerlink" title="2.6 新建友情链接 friends 页面 (可选)"></a>2.6 新建友情链接 friends 页面 (可选)</h3><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre><code>Codehexo new page &quot;friends&quot;</code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre><code>Code---title: friendsdate: 2018-12-12 21:25:30type: &quot;friends&quot;layout: &quot;friends&quot;---</code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre><code>Code[&#123;    &quot;avatar&quot;: &quot;http://image.luokangyuan.com/1_qq_27922023.jpg&quot;,    &quot;name&quot;: &quot;码酱&quot;,    &quot;introduction&quot;: &quot;我不是大佬，只是在追寻大佬的脚步&quot;,    &quot;url&quot;: &quot;http://luokangyuan.com/&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;, &#123;    &quot;avatar&quot;: &quot;http://image.luokangyuan.com/4027734.jpeg&quot;,    &quot;name&quot;: &quot;闪烁之狐&quot;,    &quot;introduction&quot;: &quot;编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬&quot;,    &quot;url&quot;: &quot;https://blinkfox.github.io/&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;, &#123;    &quot;avatar&quot;: &quot;http://image.luokangyuan.com/avatar.jpg&quot;,    &quot;name&quot;: &quot;ja_rome&quot;,    &quot;introduction&quot;: &quot;平凡的脚步也可以走出伟大的行程&quot;,    &quot;url&quot;: &quot;https://me.csdn.net/jlh912008548&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;]</code></pre><h3 id="2-7-菜单导航配置"><a href="#2-7-菜单导航配置" class="headerlink" title="2.7 菜单导航配置"></a>2.7 菜单导航配置</h3><h4 id="2-7-1-配置基本菜单导航的名称、路径-url-和图标-icon"><a href="#2-7-1-配置基本菜单导航的名称、路径-url-和图标-icon" class="headerlink" title="2.7.1. 配置基本菜单导航的名称、路径 url 和图标 icon."></a>2.7.1. 配置基本菜单导航的名称、路径 url 和图标 icon.</h4><ol><li>菜单导航名称可以是中文也可以是英文 (如：<code>Index</code> 或<code>主页</code>)</li><li>图标 icon 可以在 <a href="https://fontawesome.com/icons">Font Awesome</a> 中查找</li></ol><pre><code>Codemenu:  Index:    url: /    icon: fas fa-home  Tags:    url: /tags    icon: fas fa-tags  Categories:    url: /categories    icon: fas fa-bookmark  Archives:    url: /archives    icon: fas fa-archive  About:    url: /about    icon: fas fa-user-circle  Friends:    url: /friends    icon: fas fa-address-book</code></pre><h4 id="2-7-2-二级菜单配置方法"><a href="#2-7-2-二级菜单配置方法" class="headerlink" title="2.7.2. 二级菜单配置方法"></a>2.7.2. 二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作</p><ol><li>在需要添加二级菜单的一级菜单下添加 <code>children</code> 关键字 (如:<code>About</code> 菜单下添加 <code>children</code>)</li><li>在 <code>children</code> 下创建二级菜单的 名称 name, 路径 url 和图标 icon.</li><li>注意每个二级菜单模块前要加 <code>-</code>.</li><li>注意缩进格式</li></ol><pre><code>Codemenu:  Index:    url: /    icon: fas fa-home  Tags:    url: /tags    icon: fas fa-tags  Categories:    url: /categories    icon: fas fa-bookmark  Archives:    url: /archives    icon: fas fa-archive  About:    url: /about    icon: fas fa-user-circle-o  Friends:    url: /friends    icon: fas fa-address-book  Medias:    icon: fas fa-list    children:      - name: Musics        url: /musics        icon: fas fa-music      - name: Movies        url: /movies        icon: fas fa-film      - name: Books        url: /books        icon: fas fa-book      - name: Galleries        url: /galleries        icon: fas fa-image</code></pre><h3 id="2-8-添加-emoji-表情支持（可选的）"><a href="#2-8-添加-emoji-表情支持（可选的）" class="headerlink" title="2.8 添加 emoji 表情支持（可选的）"></a>2.8 添加 emoji 表情支持（可选的）</h3><p>本主题新增了对 <code>emoji</code> 表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code> 表情的生成，把对应的 <code>markdown emoji</code> 语法（<code>::</code>, 例如：<code>:smile:</code>）转变成会跳跃的 <code>emoji</code> 表情，安装命令如下：</p><pre><code>Codenpm install hexo-filter-github-emojis --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre><code>CodegithubEmojis:  enable: true  className: github-emoji  inject: true  styles:  customEmojis:</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用 <code>emoji</code> 语法写的表情了。</p><h3 id="2-9-代码高亮"><a href="#2-9-代码高亮" class="headerlink" title="2.9 代码高亮"></a>2.9 代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p><pre><code>Codenpm i -S hexo-prism-plugin</code></pre><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre><code>Codeprism_plugin:  mode: &#39;preprocess&#39;    # realtime/preprocess  theme: &#39;tomorrow&#39;  line_number: false    # default false  custom_css:</code></pre><h3 id="2-10-搜索"><a href="#2-10-搜索" class="headerlink" title="2.10 搜索"></a>2.10 搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre><code>Codenpm install hexo-generator-search --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre><code>Codesearch:  path: search.xml  field: post</code></pre><h3 id="2-11-中文链接转拼音（可选的）"><a href="#2-11-中文链接转拼音（可选的）" class="headerlink" title="2.11 中文链接转拼音（可选的）"></a>2.11 中文链接转拼音（可选的）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre><code>Codenpm i hexo-permalink-pinyin --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre><code>Codepermalink_pinyin:  enable: true  separator: &#39;-&#39; # default: &#39;-&#39;</code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="2-12-文章字数统计插件（可选的）"><a href="#2-12-文章字数统计插件（可选的）" class="headerlink" title="2.12 文章字数统计插件（可选的）"></a>2.12 文章字数统计插件（可选的）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a> 插件。</p><p>安装命令如下：</p><pre><code>Codenpm i --save hexo-wordcount</code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，激活以下配置项即可：</p><pre><code>CodewordCount:  enable: false # 将这个值设置为 true 即可.  postWordCount: true  min2read: true  totalCount: true</code></pre><h3 id="2-13-添加-RSS-订阅支持（可选的）"><a href="#2-13-添加-RSS-订阅支持（可选的）" class="headerlink" title="2.13 添加 RSS 订阅支持（可选的）"></a>2.13 添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre><code>Codenpm install hexo-generator-feed --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre><code>Codefeed:  type: atom  path: atom.xml  limit: 20  hub:  content:  content_limit: 140  content_limit_delim: &#39; &#39;  order_by: -date</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="2-14-添加-DaoVoice-在线聊天功能（可选的）"><a href="#2-14-添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="2.14 添加 DaoVoice 在线聊天功能（可选的）"></a>2.14 添加 <a href="http://www.daovoice.io/">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中</p><h3 id="2-15-添加-Tidio-在线聊天功能（可选的）"><a href="#2-15-添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="2.15 添加 Tidio 在线聊天功能（可选的）"></a>2.15 添加 <a href="https://www.tidio.com/">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href="https://www.tidio.com/">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="2-16-修改页脚"><a href="#2-16-修改页脚" class="headerlink" title="2.16 修改页脚"></a>2.16 修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="2-17-修改社交链接"><a href="#2-17-修改社交链接" class="headerlink" title="2.17 修改社交链接"></a>2.17 修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre><code>Code&lt;% if (theme.socialLink.github) &#123; %&gt;    &lt;a href=&quot;&lt;%= theme.socialLink.github %&gt;&quot; class=&quot;tooltipped&quot; target=&quot;_blank&quot; data-tooltip=&quot;访问我的GitHub&quot; data-position=&quot;top&quot; data-delay=&quot;50&quot;&gt;        &lt;i class=&quot;fab fa-github&quot;&gt;&lt;/i&gt;    &lt;/a&gt;&lt;% &#125; %&gt;</code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p></blockquote><h3 id="2-18-修改打赏的二维码图片"><a href="#2-18-修改打赏的二维码图片" class="headerlink" title="2.18 修改打赏的二维码图片"></a>2.18 修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="2-19-配置音乐播放器（可选的）"><a href="#2-19-配置音乐播放器（可选的）" class="headerlink" title="2.19 配置音乐播放器（可选的）"></a>2.19 配置音乐播放器（可选的）</h3><blockquote><p>新版主题支持接入第三方音乐，如 QQ 音乐，网易云音乐，酷狗音乐等等</p></blockquote><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活 music 配置即可：</p><pre><code>Code# 是否在首页显示音乐music:  enable: true  title:            #非吸底模式有效    enable: true    show: 听听音乐  server: netease   #require music platform: netease, tencent, kugou, xiami, baidu  type: playlist    #require song, playlist, album, search, artist  id: 503838841     #require song id / playlist id / album id / search keyword  fixed: false      # 开启吸底模式  autoplay: false   # 是否自动播放  theme: &#39;#42b983&#39;  loop: &#39;all&#39;       # 音频循环播放, 可选值: &#39;all&#39;, &#39;one&#39;, &#39;none&#39;  order: &#39;random&#39;   # 音频循环顺序, 可选值: &#39;list&#39;, &#39;random&#39;  preload: &#39;auto&#39;   # 预加载，可选值: &#39;none&#39;, &#39;metadata&#39;, &#39;auto&#39;  volume: 0.7       # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效  listFolded: true  # 列表默认折叠</code></pre><blockquote><p><code>server</code> 可选 <code>netease</code>（网易云音乐），<code>tencent</code>（QQ 音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p><p><code>baidu</code>（百度音乐）。</p><p><code>type</code> 可选 <code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p><p><code>id</code> 获取示例：浏览器打开网易云音乐，点击我喜欢的音乐歌单，地址栏有一串数字，<code>playlist</code> 的 <code>id</code> 即为这串数字。</p></blockquote><h2 id="3-文章-Front-matter-介绍"><a href="#3-文章-Front-matter-介绍" class="headerlink" title="3. 文章 Front-matter 介绍"></a>3. 文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床 (腾讯云、七牛云、又拍云等) 来做图片的路径。如: <a href="http://xxx.com/xxx.jpg">http://xxx.com/xxx.jpg</a></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code> 版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code> 版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 verifyPassword 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章 md 文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><pre><code>Code---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00---</code></pre><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><pre><code>Code---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00author: 赵奇img: /source/images/xxx.jpgtop: truecover: truecoverImg: /images/1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: falsemathjax: falsesummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags:  - Typora  - Markdown---</code></pre><h2 id="4-效果截图"><a href="#4-效果截图" class="headerlink" title="4. 效果截图"></a>4. 效果截图</h2><blockquote><p><strong>最新版本进行了优化更新，效果图与最初的效果图有差别，下面的图不是最新版本的。</strong></p></blockquote><p><a href="http://static.blinkfox.com/matery-20181202-1.png"><img src="http://static.blinkfox.com/matery-20181202-1.png" alt="首页"></a></p><p>首页</p><p><a href="http://static.blinkfox.com/matery-20181202-2.png"><img src="http://static.blinkfox.com/matery-20181202-2.png" alt="首页推荐文章"></a></p><p>首页推荐文章</p><p><a href="http://static.blinkfox.com/matery-20181202-3.png"><img src="http://static.blinkfox.com/matery-20181202-3.png" alt="首页文章列表"></a></p><p>首页文章列表</p><p><a href="http://static.blinkfox.com/matery-20181202-7.png"><img src="http://static.blinkfox.com/matery-20181202-7.png" alt="关于我页面"></a></p><p>关于我页面</p><p><a href="http://static.blinkfox.com/matery-20181202-8.png"><img src="http://static.blinkfox.com/matery-20181202-8.png" alt="文章详细页面"></a></p><p>文章详细页面</p><h2 id="5-自定制修改"><a href="#5-自定制修改" class="headerlink" title="5. 自定制修改"></a>5. 自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="5-1-修改主题颜色"><a href="#5-1-修改主题颜色" class="headerlink" title="5.1 修改主题颜色"></a>5.1 修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre><code>Code/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */.bg-color &#123;    background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%);&#125;/*如果想去掉banner图的颜色渐变效果，请将以下的css属性注释掉或者删除掉即可*/@-webkit-keyframes rainbow &#123;   /* 动态切换背景颜色. */&#125;@keyframes rainbow &#123;    /* 动态切换背景颜色. */&#125;</code></pre><h3 id="5-2-修改-banner-图和文章特色图"><a href="#5-2-修改-banner-图和文章特色图" class="headerlink" title="5.2 修改 banner 图和文章特色图"></a>5.2 修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 `` 代码中：</p><pre><code>Code$(&#39;.bg-cover&#39;).css(&#39;background-image&#39;, &#39;url(/medias/banner/&#39; + new Date().getDay() + &#39;.jpg)&#39;);</code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><p>如果想改为每小时或者每分钟切换 banner 图的话，需要将 <code>getDay()</code> 改为 <code>getHours()</code> 或者 <code>getMinutes()</code> 即可。</p><h3 id="5-3-修改网站相关信息"><a href="#5-3-修改网站相关信息" class="headerlink" title="5.3 修改网站相关信息"></a>5.3 修改网站相关信息</h3><p>首先看一个图，如下：</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115115221.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115115221.png" alt="img"></a></p><p>img</p><p>紧接着放上相关的配置文件信息：</p><ol><li>网站信息的修改</li></ol><pre><code>Code#这是根目录下的配置文件信息title: 过客~励む   #这是网站标题subtitle: 励む    #这是网站副标题subtitler# 下面两个description,keywords，需要填上，如果想让搜索引擎收录，这个做SEO优化必不可忽视的两个属性description: 专注于Web,分享生活,分享知识  #网站描述keywords: [HTML, CSS, JavaScript, JQuery, React, Vue.js等]  #网站的关键词author: YangAir  #作者，文章版权所显示的language: zh-CN  #网站语言，不填写，默认为英文timezone:   #时区，可以不填写# 这是主题配置文件的相关信息# 配置网站favicon和网站LOGO# 此处我用的CDN，也可以使用本地文件favicon: https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.4/source/favicon.pnglogo: https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.4/source/logo.png# 网站副标题，打字效果# 如果有符号 ‘ ，请在 ’ 前面加上 \subtitle:   enable: true  loop: true # 是否循环  showCursor: true # 是否显示光标  startDelay: 300 # 开始延迟  typeSpeed: 100 # 打字速度  backSpeed: 50 # 删除速度  sub1: 志之所向，金石为开，谁能御之？  sub2: 花开不是为了花落，而是为了开的更加灿烂。  sub3: 没有伞的孩子必须努力奔跑！  sub4: 欲望以提升热忱，毅力以磨平高山。  sub5: 如果放弃太早，你永远都不知道自己会错过什么。  sub6: 没有礁石，就没有美丽的浪花；没有挫折，就没有壮丽的人生。</code></pre><p><strong>注意：</strong></p><p>网站打字效果副标题默认有两个，即 <code>sub1</code> 和 <code>sub2</code>，如果想写多个，则需要修改两处地方，首先修改配置文件，如上面所示，在 <code>sub1</code> 和 <code>sub2</code> 后面继续添加即可，然后在去主题目录下的 <code>layout</code> 文件夹下的<code>_partial</code> 文件夹，修改 <code>bg-cover-content.ejs</code> 文件，大约在 12 行左右，如下面所示：</p><pre><code>Code &lt;div class=&quot;description center-align&quot;&gt;     &lt;% if (theme.subtitle.enable) &#123; %&gt;         &lt;span id=&quot;subtitle&quot;&gt;&lt;/span&gt;         &lt;script src=&quot;https://cdn.jsdelivr.net/npm/typed.js@2.0.11&quot;&gt;&lt;/script&gt;        &lt;script&gt;            var typed = new Typed(&quot;#subtitle&quot;, &#123;                strings: [&#39;&lt;%= theme.subtitle.sub1 %&gt;&#39;,                          &#39;&lt;%= theme.subtitle.sub2 %&gt;&#39;,                          &#39;&lt;%= theme.subtitle.sub3 %&gt;&#39;,                          &#39;&lt;%= theme.subtitle.sub4 %&gt;&#39;,                          &#39;&lt;%= theme.subtitle.sub5 %&gt;&#39;,                          &#39;&lt;%= theme.subtitle.sub6 %&gt;&#39;],                 startDelay: &lt;%= theme.subtitle.startDelay %&gt;,                 typeSpeed: &lt;%= theme.subtitle.typeSpeed %&gt;,                 loop: &lt;%= theme.subtitle.loop %&gt;,                    backSpeed: &lt;%= theme.subtitle.backSpeed %&gt;,                 showCursor: &lt;%= theme.subtitle.showCursor %&gt;              &#125;);          &lt;/script&gt;      &lt;% &#125; else &#123; %&gt;            &lt;%= config.description %&gt;      &lt;% &#125; %&gt;&lt;/div&gt;</code></pre><ol><li>社交链接的修改</li></ol><p>默认的配置信息为：</p><pre><code>Code# 首页 banner 中的第二行个人信息配置，留空即不启用socialLink:  github:  https://github.com/blinkfox  email: 1181062873@qq.com  facebook: # https://www.facebook.com/xxx  twitter: # https://twitter.com/xxx  qq: 1181062873  weibo: # https://weibo.com/xxx  zhihu: # https://www.zhihu.com/xxx  rss: true # true、false</code></pre><p>如果想添加简书，CSDN，掘金，博客园等等，需要在主题配置文件添加相关配置，如下是我个人的配置：</p><pre><code>CodesocialLink:  qq: 1035800145  weixin: https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/wechat.png  github: https://github.com/Yafine  email: mailto:1035800145@qq.com  facebook: # https://www.facebook.com/xxx  twitter: # https://twitter.com/xxx  weibo: # https://weibo.com/xxx  zhihu: https://www.zhihu.com/people/xuan-tian-40-64/activities  juejin: https://juejin.im/user/5a902053f265da4e7527ae71/activities  csdn: https://blog.csdn.net/victoryxa  jianshu: https://www.jianshu.com/u/3b3856869772  cnblogs: https://www.cnblogs.com/yafine/  rss: true # true、false</code></pre><p>其中的 <code>weixin</code> 我是用的图片链接，会跳转到一个新的标签页，之后还需要修改 <code>ejs</code> 文件，文件在主题目录下的 <code>layout</code> 文件夹下的<code>_partial</code> 文件夹，修改 <code>social-link.ejs</code>，添加相关的配置，我个人添加的配置如下：</p><pre><code>Code&lt;% if (theme.socialLink.jianshu) &#123; %&gt;    &lt;a href=&quot;&lt;%= theme.socialLink.jianshu %&gt;&quot; class=&quot;tooltipped&quot; target=&quot;_blank&quot; data-tooltip=&quot;关注我的简书: &lt;%= theme.socialLink.jianshu %&gt;&quot; data-position=&quot;top&quot; data-delay=&quot;50&quot;&gt;        &lt;i class=&quot;fab fa-jianshu&quot;&gt;简&lt;/i&gt;    &lt;/a&gt;&lt;% &#125; %&gt;&lt;% if (theme.socialLink.csdn) &#123; %&gt;    &lt;a href=&quot;&lt;%= theme.socialLink.csdn %&gt;&quot; class=&quot;tooltipped&quot; target=&quot;_blank&quot; data-tooltip=&quot;关注我的CSDN: &lt;%= theme.socialLink.csdn %&gt;&quot; data-position=&quot;top&quot; data-delay=&quot;50&quot;&gt;        &lt;i class=&quot;fab fa-csdn&quot;&gt;C&lt;/i&gt;    &lt;/a&gt;&lt;% &#125; %&gt;&lt;% if (theme.socialLink.juejin) &#123; %&gt;    &lt;a href=&quot;&lt;%= theme.socialLink.juejin %&gt;&quot; class=&quot;tooltipped&quot; target=&quot;_blank&quot; data-tooltip=&quot;关注我的掘金: &lt;%= theme.socialLink.juejin %&gt;&quot; data-position=&quot;top&quot; data-delay=&quot;50&quot;&gt;        &lt;i class=&quot;fab fa-juejin&quot;&gt;掘&lt;/i&gt;    &lt;/a&gt;&lt;% &#125; %&gt;&lt;% if (theme.socialLink.cnblogs) &#123; %&gt;    &lt;a href=&quot;&lt;%= theme.socialLink.cnblogs %&gt;&quot; class=&quot;tooltipped&quot; target=&quot;_blank&quot; data-tooltip=&quot;关注我的博客园: &lt;%= theme.socialLink.cnblogs %&gt;&quot; data-position=&quot;top&quot; data-delay=&quot;50&quot;&gt;        &lt;i class=&quot;fab fa-juejin&quot;&gt;博&lt;/i&gt;    &lt;/a&gt;&lt;% &#125; %&gt;&lt;% if (theme.socialLink.weixin) &#123; %&gt;    &lt;a href=&quot;&lt;%= theme.socialLink.weixin %&gt;&quot; class=&quot;tooltipped&quot; target=&quot;_blank&quot; data-tooltip=&quot;微信联系我: &lt;%= theme.socialLink.weixin %&gt;&quot; data-position=&quot;top&quot; data-delay=&quot;50&quot;&gt;        &lt;i class=&quot;fab fa-weixin&quot;&gt;&lt;/i&gt;    &lt;/a&gt;&lt;% &#125; %&gt;</code></pre><h2 id="6-版本记录"><a href="#6-版本记录" class="headerlink" title="6. 版本记录"></a>6. 版本记录</h2><ul><li>v1.3.2<ul><li>新增了繁体字的支持；</li><li>新增了 404 页面；</li><li>其他小问题修改；</li></ul></li><li>v1.3.1<ul><li>新增了 <code>kbd</code> 样式；</li><li>修复了子目录部署时词云中链接有误的问题；</li><li>移除了 TOC 中的竖线；</li><li>修复了首页 icon 图标中的 tooltip 不显示的问题；</li><li>修复生成静态文件时，每天切换 banner 不生效的问题；</li><li>更新了 <code>miniValine</code> 中的一些配置；</li></ul></li><li>v1.3.0<ul><li>新增了支持子目录部署的功能（如：<code>Gitee</code>）；</li><li>新增了 <code>MiniValine</code> 评论系统；</li><li>新增了 <code>jsdelivr</code> 的支持；</li><li>修复了诸多发现的 bug；</li></ul></li><li>v1.2.2<ul><li>新增了自定义文章 <code>keywords</code> 的功能；</li><li>新增静态彩带点击切换的功能和配置；</li><li>将文章字数统计、彩带和站点运行时间等功能默认设置为 <code>false</code>；</li><li>修改了文章的 <code>description</code> 的 meta 属性优先读取文章的 <code>summary</code> 属性；</li><li>修改了文章标题的 HTML 标签，从 <code>div</code> 改成了 <code>h1</code> 标题；</li><li>修改了页脚年份显示不正确的问题；</li><li>去掉了站点运行时间中多余的 <code>setTimeout</code> 代码；</li></ul></li><li>v1.2.1<ul><li>新增了 TOC 的展开目录层级设置和滚动条功能，防止目录较多的时候目录溢出；</li><li>修改了首页的展示方式为以前的模式；</li><li>修复首页按钮没有边框的问题；</li><li>修复了音乐及吸底模式、视频、推荐文章等不激活时仍然生成首页卡片的问题；</li><li>修复 wordCount 插件未安装的问题，修改了部分配置；</li><li>修复音乐的 JSON 配置中有单引号的情况页面不显示的音乐的问题</li><li>修复标签云在 Hexo4.0 下链接失效的问题；</li></ul></li><li>v1.2.0<ul><li>新增了 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 的在线聊天功能；</li><li>新增了两级菜单的功能；</li><li>新增了打字效果的副标题；</li><li>新增了网页内容预加载的功能；</li><li>新增了首页 banner 是否每日切换的配置功能；</li><li>新增了显示 ICP 备案信息的功能，默认未开启；</li><li>新增了百度分析的配置；</li><li>新增了代码块的语言显示、一键复制、显示行号等功能；</li><li>新增了首页轮播图和推荐文章可自定义配置的功能；</li><li>新增了文章页面显示更新日期；</li><li>新增了转载规则的图标；</li><li>修改了分享的布局和显示方式；</li><li>升级更新了部分依赖库的版本；</li><li>其他细节修改和优化；</li></ul></li><li>v1.1.0<ul><li>新增了 <code>emoji</code> 的支持；</li><li>新增了站点运行时间统计及配置；</li><li>新增了留言板的功能，默认未开启；</li><li>新增了 <code>Twitter</code>、<code>Facebook</code>、知乎的社交链接；</li><li>更新了 <code>Valine</code> 的版本为最新版；</li><li>其他小细节的修改；</li></ul></li><li>v1.0.4<ul><li>新增了能为每篇文章都自定义转载规则的功能；</li><li>修复上一页、下一页的自定义 <code>summary</code> 不显示的问题；</li><li>修复了友情链接显示错位的问题，改为了瀑布流的布局方式；</li><li>其他小细节 bug 的修改；</li></ul></li><li>v1.0.3<ul><li>新增了 <code>TOC</code> 展开、收缩的按钮和相关配置，默认显示此按钮；</li></ul></li><li>v1.0.2<ul><li>升级了 <a href="https://materializecss.com/">Materialize</a> 框架版本为 <code>1.0.0</code>，重构和修改了升级过程中的部分文件或问题；</li><li>新增了首页封面的全屏轮播特效，可以将更重要的文章设置到首页轮播中；</li><li>修复首页第一个按钮是中文的问题</li><li>修复了 iPhone 上点击搜索输入获取焦点的问题；</li><li>修复了 iPhone 上输入框获取焦点后页面放大的问题；</li><li>修复一些文章或 UI 显示问题；</li></ul></li><li>v1.0.1<ul><li>调整 <code>css</code>、<code>js</code> 的文件请求路径在主题的<code>_config.yml</code> 中配置，便于你更快捷的配置自己的 CDN；</li><li>新增代码是否折行为可配置，默认为折行；</li><li>默认激活 <code>TOC</code> 功能，并新增为某篇文章关闭 <code>TOC</code> 的 <code>Front-matter</code> 配置选项；</li><li>修复文章滚动时，高亮的目录选项不准确的问题；</li><li><code>IOS</code> 下移除搜索框自动获得焦点属性，防止自动获得焦点后导致视图上移；</li></ul></li><li>v1.0.0<ul><li>新增了所有基础功能；</li></ul></li></ul><h1 id="六、其他一些-DIY-可选"><a href="#六、其他一些-DIY-可选" class="headerlink" title="六、其他一些 DIY (可选)"></a>六、其他一些 DIY (可选)</h1><blockquote><p>主题 DIY 会涉及到 js 文件和 css 文件等的修改，个人建议新增的 js 文件放在 <code>themes/matery/layout/layout.ejs</code> 这个文件下，这样会稍微加快博客访问的速度。不想花钱最好的方式是使用 cdn.jsdeliver。以后会说到。</p></blockquote><h2 id="1-动态标题"><a href="#1-动态标题" class="headerlink" title="1. 动态标题"></a>1. 动态标题</h2><p>先放上效果图再说：</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191201224219.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191201224219.png" alt="离开当前页面时"></a></p><p>离开当前页面时</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191201224258.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191201224258.png" alt="返回当前页面时"></a></p><p>返回当前页面时</p><p>实现方法，引入 js 文件，在主题文件下的 <code>/source/js/</code> 下新建 <code>FunnyTitle.js</code>，然后在添加到 <code>themes/matery/layout/layout.ejs</code> 或者添加到 <code>themes/matery/layout/_partial/head.ejs</code>，其代码如下：</p><pre><code>Code&lt;!--浏览器搞笑标题--&gt; var OriginTitle = document.title; var titleTime; document.addEventListener(&#39;visibilitychange&#39;, function () &#123;     if (document.hidden) &#123;         $(&#39;[rel=&quot;icon&quot;]&#39;).attr(&#39;href&#39;, &quot;https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/favicon.png&quot;);         document.title = &#39;ヽ(●-`Д´-)ノ你要玩捉迷藏嘛&#39;;         clearTimeout(titleTime);     &#125;     else &#123;         $(&#39;[rel=&quot;icon&quot;]&#39;).attr(&#39;href&#39;, &quot;https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/favicon.png&quot;);         document.title = &#39;ヾ(Ő∀Ő3)ノ好哦！&#39; + OriginTitle;         titleTime = setTimeout(function () &#123;             document.title = OriginTitle;         &#125;, 2000);     &#125; &#125;);</code></pre><p>我的链接：<strong><a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.4/source/js/FunnyTitle.js">https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.4/source/js/FunnyTitle.js</a></strong>（理论上一直有效）</p><p>或者直接在 <code>themes/matery/layout/layout.ejs</code> 文件中添加如下代码：</p><pre><code>Code&lt;script type=&quot;text/javascript&quot;&gt;    var OriginTitile=document.title,st;    document.addEventListener(&quot;visibilitychange&quot;,function()&#123;        document.hidden?(document.title=&quot;ヽ(●-`Д´-)ノ你要玩捉迷藏嘛&quot;,clearTimeout(st)):(document.title=&quot;(Ő∀Ő3)ノ好哦！&quot;,st=setTimeout(function()&#123;document.title=OriginTitile&#125;,3e3))    &#125;)&lt;/script&gt;</code></pre><h2 id="2-修改导航栏颜色以及透明效果"><a href="#2-修改导航栏颜色以及透明效果" class="headerlink" title="2. 修改导航栏颜色以及透明效果"></a>2. 修改导航栏颜色以及透明效果</h2><p>打开 <code>themes/matery/source/css/matery.css</code> 文件，大约在 250 行，有一个<code>.bg-color</code> 属性，修改其属性值即可，代码如下：</p><pre><code>Code.bg-color &#123;    background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%); //修改成自己喜欢的颜色值    opacity: 0.8;  //透明效果 值范围 0~1，看情况自己修改&#125;</code></pre><h2 id="3-添加动态诗词"><a href="#3-添加动态诗词" class="headerlink" title="3. 添加动态诗词"></a>3. 添加动态诗词</h2><p>采用的是<a href="https://www.jinrishici.com/">今日诗词</a>，每次返回一句诗词，根据时间、地点、天气、事件智能推荐。官网有 <a href="https://www.jinrishici.com/doc/">API 文档</a>，可以去看一下，有多种安装方式，最简单的方式就是从官网获取代码，在 <code>/themes/matery/layout/_partial/head.ejs</code> 添加下面的一行代码：</p><pre><code>Code&lt;script src=&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</code></pre><p>然后再将 <code>/themes/matery/layout/_partial/bg-cover-content.ejs</code> 中的 <code>&lt;%= config.description %&gt;</code> 修改为把 <code>&lt;%= config.description %&gt;</code> 改为 <code>&lt;span id=&quot;jinrishici-sentence&quot;&gt;正在加载今日诗词....&lt;/span&gt;&#39; %&gt;</code>，这个使用前提是将主题配置文件的 <code>subtitle</code> 的值改为 <code>false</code>。</p><h2 id="4-鼠标点击文字特效"><a href="#4-鼠标点击文字特效" class="headerlink" title="4. 鼠标点击文字特效"></a>4. 鼠标点击文字特效</h2><p>实现方法，引入 js 文件，在主题文件下的 <code>/source/js/</code> 下新建 <code>click_show_text.js</code>，其代码如下：</p><pre><code>Codevar a_idx = 0;jQuery(document).ready(function ($) &#123;    $(&quot;body&quot;).click(function (e) &#123;        var a = new Array(&quot;富强&quot;, &quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;, &quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot;, &quot;法治&quot;, &quot;爱国&quot;, &quot;敬业&quot;, &quot;诚信&quot;, &quot;友善&quot;);        var $i = $(&quot;&lt;span/&gt;&quot;).text(a[a_idx]);        a_idx = (a_idx + 1) % a.length;        var x = e.pageX,            y = e.pageY;        $i.css(&#123;            &quot;z-index&quot;: 5,            &quot;top&quot;: y - 20,            &quot;left&quot;: x,            &quot;position&quot;: &quot;absolute&quot;,            &quot;font-weight&quot;: &quot;bold&quot;,            &quot;color&quot;: &quot;#FF0000&quot;        &#125;);        $(&quot;body&quot;).append($i);        $i.animate(&#123;                &quot;top&quot;: y - 180,                &quot;opacity&quot;: 0            &#125;,            3000,            function () &#123;                $i.remove();            &#125;);    &#125;);    setTimeout(&#39;delay()&#39;, 2000);&#125;);function delay() &#123;    $(&quot;.buryit&quot;).removeAttr(&quot;onclick&quot;);&#125;</code></pre><p>或者使用我的 cdn 链接，理论上一直有效 <strong><a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.4/source/js/click_show_text.js">https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.4/source/js/click_show_text.js</a></strong>，然后在添加到 <code>themes/matery/layout/layout.ejs</code>。</p><h2 id="5-修改原有相册"><a href="#5-修改原有相册" class="headerlink" title="5. 修改原有相册"></a>5. 修改原有相册</h2><blockquote><p>参考教程：<a href="https://yafine-blog.cn/posts/3b98.html">https://yafine-blog.cn/posts/3b98.html</a></p></blockquote><h2 id="6-添加天气小插件"><a href="#6-添加天气小插件" class="headerlink" title="6. 添加天气小插件"></a>6. 添加天气小插件</h2><p>首先去中国天气官网：<a href="https://cj.weather.com.cn/plugin/pc%EF%BC%8C%E9%85%8D%E7%BD%AE%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8F%92%E4%BB%B6%EF%BC%8C%E9%80%89%E6%8B%A9%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8F%92%E4%BB%B6%E2%80%94%3E%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%B7%E5%BC%8F%E2%80%94%E2%80%94%3E%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%EF%BC%8C%E7%84%B6%E5%90%8E%E4%BC%9A%E7%94%9F%E6%88%90%E4%B8%80%E6%AE%B5%E4%BB%A3%E7%A0%81%EF%BC%8C%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4%E5%88%B0">https://cj.weather.com.cn/plugin/pc，配置自己的插件，选择自定义插件 —&gt; 自定义样式 ——&gt; 生成代码，然后会生成一段代码，复制粘贴到</a> <code>themes/matery/layout/layout.ejs</code> 即可。</p><h2 id="7-关于我页面添加个人简历"><a href="#7-关于我页面添加个人简历" class="headerlink" title="7. 关于我页面添加个人简历"></a>7. 关于我页面添加个人简历</h2><p>打开 <code>theme/matery/layout/about.ejs</code> 文件，大约在 13 行。有一个 `` 标签，找出其对应结尾的标签，大约在 61 行左右，然后在新增如下代码：</p><pre><code>Code&lt;div class=&quot;card&quot;&gt;     &lt;div class=&quot;card-content&quot;&gt;         &lt;div class=&quot;card-content article-card-content&quot;&gt;             &lt;div class=&quot;title center-align&quot; data-aos=&quot;zoom-in-up&quot;&gt;                 &lt;i class=&quot;fa fa-address-book&quot;&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;&lt;%- __(&#39;个人简历&#39;) %&gt;              &lt;/div&gt;                 &lt;div id=&quot;articleContent&quot; data-aos=&quot;fade-up&quot;&gt;                     &lt;%- page.content %&gt;                 &lt;/div&gt;           &lt;/div&gt;      &lt;/div&gt;&lt;/div&gt;</code></pre><p>注意粘贴的位置和空格要正确，这里的位置随你自己设置，你也可以把简历作为第一个 card，然后 <code>/source/about/index.md</code> 下面写上你的简历了（就像写博客一样）。</p><h2 id="8-豆瓣书单电影页面"><a href="#8-豆瓣书单电影页面" class="headerlink" title="8. 豆瓣书单电影页面"></a>8. 豆瓣书单电影页面</h2><p>注意：首先需要检查你的 hexo 版本是多少，在你的博客目录下执行命令 hexo -v 即可，这个豆瓣插件需要的版本需要 &lt; 4.2.0，否则会出现 bug，比如点击书单的在读，想读或者已读会出现一个新的弹出页面，解决办法就是降低 hexo 的版本，先卸载目前的 hexo 版本，再安装 4.0.0 版本的 hexo 即可，我的版本为 4.0.0。</p><pre><code>Codenpm uninstall hexonpm install hexo@4.0.0 -g</code></pre><ol><li>首先在博客站点目录执行下面的命令安装豆瓣插件：</li></ol><pre><code>Codenpm install hexo-douban --save</code></pre><ol><li>紧接着在博客站点目录的配置文件<code>_config.yml</code> 下，添加如下配置：</li></ol><pre><code>Codedouban:   user: 252345665    #这个需要修改为你个人的id    builtin: false   #如果想生成豆瓣页面，这个需要设置为true  book:     title: &#39;This is my book title&#39;     quote: &#39;This is my book quote&#39;   movie:     title: &#39;This is my movie title&#39;     quote: &#39;This is my movie quote&#39;   game:     title: &#39;This is my game title&#39;     quote: &#39;This is my game quote&#39;   timeout: 10000</code></pre><ul><li><strong>user</strong>:：你的豆瓣 ID。打开豆瓣，登入账户，然后在右上角点击 ” 个人主页 “，这时候地址栏的 URL 大概是这样：<a href="https://www.douban.com/people/xxxxxx/">https://www.douban.com/people/xxxxxx/</a> ，其中的”xxxxxx” 就是你的个人 ID 了。</li><li><strong>builtin</strong>：是否将生成页面的功能嵌入 <code>hexo s</code> 和 <code>hexo g</code> 中，默认是 <code>false</code> ，另一可选项为 <code>true</code> 。</li><li><strong>title</strong>： 该页面的标题。</li><li><strong>quote</strong>： 写在页面开头的一段话，支持 html 语法。</li><li><strong>timeout</strong>： 爬取数据的超时时间，默认是 10000ms，如果在使用时发现报了超时的错 (ETIMEOUT) 可以把这个数据设置的大一点。</li></ul><p>如果只想显示某一个页面 (比如 movie)，那就把其他的配置项注释掉即可。</p><ol><li>然后再主题配置文件<code>_config.yml</code> 中添加关于此页面的菜单：(下面是我的配置)</li></ol><pre><code>Codemenu:    媒体:       url: /       icon: fas fa-list       children:         - name: 电影           url: /movies           icon: fas fa-film         - name: 书单           url: /books           icon: fas fa-book         - name: 游戏           url: /games           icon: fas fa-gamepad</code></pre><ol><li>适配 Matery 主题：在 <code>/themes/hexo-theme-matery/layout</code> 文件夹下面创建一个名为 <code>douban.ejs</code> 的文件，并将下面的内容复制进去：</li></ol><pre><code>Code&lt;%- partial(&#39;_partial/post-cover&#39;) %&gt; &lt;style&gt;     .hexo-douban-picture img &#123;        width: 100%;     &#125; &lt;/style&gt;&lt;main class=&quot;content&quot;&gt;     &lt;div id=&quot;contact&quot; class=&quot;container chip-container&quot;&gt;         &lt;div class=&quot;card&quot;&gt;             &lt;div class=&quot;card-content&quot; style=&quot;padding: 30px&quot;&gt;                 &lt;h1 style=&quot;margin: 10px 0 10px 0px;&quot;&gt;&lt;%= page.title %&gt;&lt;/h1&gt;                 &lt;%- page.content %&gt;             &lt;/div&gt;         &lt;/div&gt;         &lt;div class=&quot;card&quot;&gt;             &lt;div class=&quot;card-content&quot; style=&quot;text-align: center&quot;&gt;                 &lt;h3 style=&quot;margin: 5px 0 5px 5px;&quot;&gt;如果你有好的内容推荐，欢迎在下面留言！&lt;/h3&gt;             &lt;/div&gt;         &lt;/div&gt;         &lt;div class=&quot;card&quot;&gt;             &lt;% if (theme.gitalk &amp;&amp; theme.gitalk.enable) &#123; %&gt;                &lt;%- partial(&#39;_partial/gitalk&#39;) %&gt;            &lt;% &#125; %&gt;             &lt;% if (theme.gitment.enable) &#123; %&gt;                 &lt;%- partial(&#39;_partial/gitment&#39;) %&gt;             &lt;% &#125; %&gt;             &lt;% if (theme.disqus.enable) &#123; %&gt;                 &lt;%- partial(&#39;_partial/disqus&#39;) %&gt;             &lt;% &#125; %&gt;             &lt;% if (theme.livere &amp;&amp; theme.livere.enable) &#123; %&gt;                 &lt;%- partial(&#39;_partial/livere&#39;) %&gt;             &lt;% &#125; %&gt;             &lt;% if (theme.valine &amp;&amp; theme.valine.enable) &#123; %&gt;                 &lt;%- partial(&#39;_partial/valine&#39;) %&gt;             &lt;% &#125; %&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/main&gt;</code></pre><ol><li>然后在博客站点目录下的 <code>node_modules</code> 文件夹下找到 <code>hexo-douban/lib</code>，文件夹下有三个 js 文件，分别为：<code>books-generator.js</code> 、<code>games-generator.js</code> 、<code>movies-generator.js</code>，用文本编辑器打开这三个文件，并将其文件内容末尾的代码修改为一下内容：</li></ol><pre><code>Code/* 原文件内容为 layout: [`page`, `post`] ，将其修改为下面的内容*/layout: [`page`, `douban`]</code></pre><ol><li>最后就是使用并生成相应的页面，执行命令如下:</li></ol><pre><code>Codehexo douban</code></pre><p><strong>需要注意的是</strong>，通常大家都喜欢用 <code>hexo d</code> 来作为 <code>hexo deploy</code> 命令的简化，但是当安装了 <code>hexo douban</code> 之后，就不能用 <code>hexo d</code> 了，因为 <code>hexo douban</code> 跟 <code>hexo deploy</code> 的前缀都是 <code>hexo d</code> ，你以后执行的 <code>hexo d</code> 将不再是 Hexo 页面的生成，而是豆瓣页面的生成。</p><p>以下是可选的命令参数：</p><pre><code>Code-h, --help    # 帮助页面-b, --books   # 只生成书单页面-g, --games   # 只生成游戏页面-m, --movies  # 只生成电影页面</code></pre><p><strong>当站点配置文件的 builtin 的值为 true 时，生成页面的功能会嵌入到 <code>hexo g</code> 和 <code>hexo s</code> 中，在进行部署生成操作，会自动生成相应的页面</strong>。</p><h2 id="9-外链跳转插件"><a href="#9-外链跳转插件" class="headerlink" title="9. 外链跳转插件"></a>9. 外链跳转插件</h2><blockquote><p><a href="https://blog.hvnobug.com/go.html?url=aHR0cHM6Ly9naXRodWIuY29tL2h2bm9idWcvaGV4by1leHRlcm5hbC1saW5r">hexo-external-link</a> 是一个跳转外链相关插件。自动为所有 html 文件中外链的 a 标签生成对应的属性。 比如 设置 <code>target=’_blank’, rel=’external nofollow noopener noreferrer’</code> 告诉搜索引擎这是外部链接，不要将该链接计入权重。 同时自动生成外链跳转页面，默认在根目录下 go.html;</p></blockquote><p>使用 npm 或者 yarn 安装</p><pre><code>Code## npm 安装npm install hexo-external-link --save## yarn 安装yarn add hexo-external-link</code></pre><p>之后再 hexo 博客站点根目录下添加如下配置：</p><pre><code>Codehexo_external_link:  enable: true  enable_base64_encode: true  url_param_name: &#39;u&#39;  html_file_name: &#39;go.html&#39;  target_blank: true  link_rel: &#39;external nofollow noopener noreferrer&#39;  domain: &#39;your_domain&#39; # 如果开启了防盗链，填写你的域名  safety_chain: true</code></pre><ul><li><strong>enable</strong> - 是否开启 <code>hexo_external_link</code> 插件 - 默认 false</li><li><strong>enable_base64_encode</strong> - 是否对跳转 <code>url</code> 使用 <code>base64编码</code> - 默认 fasle</li><li><strong>url_param_name</strong> - url 参数名，在跳转到外链传递给 <code>html_file_name</code> 的参数名 - 默认 ‘u’</li><li><strong>html_file_name</strong> - 跳转到外链的页面文件路径 - 默认 ‘go.html’</li><li><strong>target_blank</strong> - 是否为外链的 <code>a</code> 标签添加 <code>target=&#39;_blank&#39;</code> - 默认 true</li><li><strong>link_rel</strong> - 设置外链的 <code>a</code> 标签的 rel 属性 - 默认 ‘external nofollow noopener noreferrer’</li><li><strong>domain</strong> - 如果开启了防盗链，除了 localhost 和 domain (你的域名) 之外调用会跳到主页，同时也是判断链接是否为外链的依据 - 默认 window.location.host</li><li><strong>safety_chain</strong> - go.html 为了防止外链盗用 对域名进行的判断 - 默认 false</li></ul><h2 id="10-添加动态科技线条背景"><a href="#10-添加动态科技线条背景" class="headerlink" title="10. 添加动态科技线条背景"></a>10. 添加动态科技线条背景</h2><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/04.gif"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/04.gif" alt="img"></a></p><p>img</p><p>在 <code>themes/matery/layout/layout.ejs</code> 文件中添加如下代码：</p><pre><code>Code&lt;!--动态线条背景--&gt;&lt;script type=&quot;text/javascript&quot;color=&quot;122 103 238&quot; opacity=&#39;0.7&#39; zIndex=&quot;-2&quot; count=&quot;200&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;</code></pre><p>其中：</p><ul><li>color：表示线条颜色，三个数字分别为 (R,G,B)，默认：（0,0,0）</li><li>opacity：表示线条透明度（0~1），默认：0.5</li><li>count：表示线条的总数量，默认：150</li><li>zIndex：表示背景的 z-index 属性，css 属性用于控制所在层的位置，默认：-1</li></ul><h2 id="11-添加鼠标点击烟花爆炸效果"><a href="#11-添加鼠标点击烟花爆炸效果" class="headerlink" title="11. 添加鼠标点击烟花爆炸效果"></a>11. 添加鼠标点击烟花爆炸效果</h2><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/03.gif"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/03.gif" alt="img"></a></p><p>img</p><p>首先在 <code>themes/matery/source/js</code> 目录下新建 <code>fireworks.js</code> 文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.4/source/js/fireworks.js">传送门</a>，将内容复制粘贴到 <code>fireworks.js</code> 即可。</p><p>然后再 <code>themes/matery/layout/layout.ejs</code> 文件内添加下面的内容：</p><pre><code>Code&lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;/canvas&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;/js/fireworks.js&quot;&gt;&lt;/script&gt;</code></pre><p>然后 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code> 即可，就可以看到效果了。</p><h2 id="12-添加樱花飘落效果"><a href="#12-添加樱花飘落效果" class="headerlink" title="12. 添加樱花飘落效果"></a>12. 添加樱花飘落效果</h2><p>先看效果：</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/02.gif"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/02.gif" alt="img"></a></p><p>img</p><p>在 <code>themes/matery/source/js</code> 目录下新建 <code>sakura.js</code> 文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.4/source/js/sakura.js">传送门</a>，将内容复制粘贴到 sakura.js 即可。</p><p>然后再 <code>themes/matery/layout/layout.ejs</code> 文件内添加下面的内容：</p><pre><code>Code&lt;script type=&quot;text/javascript&quot;&gt;//只在桌面版网页启用特效var windowWidth = $(window).width();if (windowWidth &gt; 768) &#123;    document.write(&#39;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/sakura.js&quot;&gt;&lt;\/script&gt;&#39;);&#125;&lt;/script&gt;</code></pre><h2 id="13-添加鼠标彩虹星星掉落跟随效果"><a href="#13-添加鼠标彩虹星星掉落跟随效果" class="headerlink" title="13. 添加鼠标彩虹星星掉落跟随效果"></a>13. 添加鼠标彩虹星星掉落跟随效果</h2><p>先看看效果，再决定要不要用。</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/01.gif"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/01.gif" alt="img"></a></p><p>img</p><p>在 <code>themes/matery/source/js</code> 目录下新建 <code>cursor.js</code> 文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.4/source/js/cursor.js">传送门</a>，将内容复制粘贴到 cursor.js 即可。</p><p>然后再 <code>themes/matery/layout/layout.ejs</code> 文件内添加下面的内容：</p><pre><code>Code&lt;script src=&quot;/js/cursor.js&quot;&gt;&lt;/script&gt;</code></pre><h2 id="14-添加雪花飘落效果"><a href="#14-添加雪花飘落效果" class="headerlink" title="14. 添加雪花飘落效果"></a>14. 添加雪花飘落效果</h2><p>先看看效果吧！</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/1.gif"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/1.gif" alt="img"></a></p><p>img</p><p>) 在 <code>themes/matery/source/js</code> 目录下新建 <code>snow.js</code> 文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.4/source/js/snow1.js">传送门</a>，将内容复制粘贴到 cursor.js 即可。</p><p>然后再 <code>themes/matery/layout/layout.ejs</code> 文件内添加下面的内容：</p><pre><code>Code&lt;script src=&quot;/js/snow.js&quot;&gt;&lt;/script&gt;</code></pre><h2 id="15-添加自定义页面"><a href="#15-添加自定义页面" class="headerlink" title="15. 添加自定义页面"></a>15. 添加自定义页面</h2><p>首先看一下效果吧，我自己写的，写的不好，不要笑我哦！</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115.gif"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115.gif" alt="img"></a></p><p>img</p><p>以我的配置为例：</p><p>首先在站点目录下的 source 文件夹下新建 <code>aboutme</code> 文件，文件名可自定义，然后编写一个 <code>index.html</code> 放入 <code>aboutme</code> 文件夹下，然后在主题配置文件下的导航配置信息添加下面的配置：</p><pre><code>CodeAbout:    url: /    icon: fas fa-address-card    children:      - name: 关于我        url: /about        icon: fas fa-user-circle      - name: Another    #这是新添加的，在原有配置基础上添加        url: /aboutme        icon: fa fa-user-secret</code></pre><p>然后在站点配置文件下，找到 <code>skip_render</code>，在后面添加属性，如下：</p><pre><code>Codeskip_render: aboutme/**  # 其意思为在对文件进行渲染时跳过aboutme文件下的所有文件</code></pre><p>如果添加需要跳过多个目录下的文件时，配置如下：</p><pre><code>Codeskip_render:     - aboutme/**     - box/**    - 2020/**</code></pre><p>知道方法后，你可以添加你自己想要添加的页面，让你的博客内容更加充实。</p><h2 id="16-添加-404-页面"><a href="#16-添加-404-页面" class="headerlink" title="16. 添加 404 页面"></a>16. 添加 404 页面</h2><p>我的 404 页面是这样的：</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200117142120.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200117142120.png" alt="img"></a></p><p>img</p><p>开始说一下配置步骤，首先再站点根目录下的 source 文件夹下新建 <code>404.md</code> 文件，里面内容如下：</p><pre><code>Code---title: 404date: 2019-10-28 16:41:10type: &quot;404&quot;layout: &quot;404&quot;description: &quot;Oops～，我崩溃了！找不到你想要的页面了&quot;---</code></pre><p>紧接着再新建主题文件夹的 layout 目录下新建 <code>404.ejs</code> 文件，添加内容如下：</p><pre><code>Code&lt;style type=&quot;text/css&quot;&gt;    /* don&#39;t remove. */    .about-cover &#123;        height: 90.2vh;    &#125;&lt;/style&gt;&lt;div class=&quot;bg-cover pd-header about-cover&quot;&gt;    &lt;div class=&quot;container&quot;&gt;        &lt;div class=&quot;row&quot;&gt;            &lt;div class=&quot;col s10 offset-s1 m8 offset-m2 l8 offset-l2&quot;&gt;                &lt;div class=&quot;brand&quot;&gt;                    &lt;div class=&quot;title center-align&quot;&gt;                        404                    &lt;/div&gt;                    &lt;div class=&quot;description center-align&quot;&gt;                        &lt;%= page.description %&gt;                    &lt;/div&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/div&gt;&lt;script&gt;    // 每天切换 banner 图.  Switch banner image every day.    $(&#39;.bg-cover&#39;).css(&#39;background-image&#39;, &#39;url(https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.4/source/medias/banner/&#39; + new Date().getDay() + &#39;.jpg)&#39;);&lt;/script&gt;</code></pre><p>然后部署，再看看效果即可。</p><h2 id="17-文章生成永久链接"><a href="#17-文章生成永久链接" class="headerlink" title="17. 文章生成永久链接"></a>17. 文章生成永久链接</h2><p>主题默认的文章链接配置是</p><pre><code>Codepermalink: :year/:month/:day/:title</code></pre><p>这种生成的链接地址很长，文章版权的链接地址会出现一大串字符编码，一点也不好看。因此需要修改文章生成链接的格式。</p><p>首先再根目录下执行下面的命令：</p><p><a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlinkGitHub 地址</a></p><pre><code>Codenpm install hexo-abbrlink --save</code></pre><p>然后再站点配置文件下添加如下配置：</p><pre><code>Codeabbrlink:    alg: crc16   #算法： crc16(default) and crc32    rep: hex     #进制： dec(default) and hex: dec #输出进制：十进制和十六进制，默认为10进制。丨dec为十进制，hex为十六进制</code></pre><p>再将站点配置文件的 <code>permalink</code> 的值修改为：</p><pre><code>Codepermalink: posts/:abbrlink.html  # 此处可以自己设置，也可以直接使用 :/abbrlink</code></pre><p>生成文章的链接格式就会是如下样例（官方样例）:</p><pre><code>Codecrc16 &amp; hexhttps://post.zz173.com/posts/66c8.htmlcrc16 &amp; dechttps://post.zz173.com/posts/65535.htmlcrc32 &amp; hexhttps://post.zz173.com/posts/8ddf18fb.htmlcrc32 &amp; dechttps://post.zz173.com/posts/1690090958.html</code></pre><p>生成完后，原 md 文件的 Front-matter 内会增加 <code>abbrlink</code> 字段，值为生成的 ID 。这个字段确保了在我们修改了 <code>Front-matter</code> 内的博客标题 title 或创建日期 date 字段之后而不会改变链接地址。</p><h2 id="18-页面获取标题-可选"><a href="#18-页面获取标题-可选" class="headerlink" title="18. 页面获取标题 (可选)"></a>18. 页面获取标题 (可选)</h2><p>看两个图就知道是怎么回事了。</p><p>客官说：小二儿，上图。</p><p>小二儿说：来喽！</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200215202242.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200215202242.png" alt="img"></a></p><p>img</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200215202340.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200215202340.png" alt="img"></a></p><p>img</p><p>看图中所指出的文字，和你的比较一下，你就知道差别在哪了！不说这么多的废话了，上教程！看下面。</p><p>以我的博客位置为例，修改 <code>F:\blog\themes\matery\layout\_partial</code> 中的 <code>bg-cover-content.ejs</code> 文件，其中原主题中这个文件的代码为 (大约在第 4 行)：</p><pre><code>Code&lt;div class=&quot;title center-align&quot;&gt;     &lt;% if (config.subtitle &amp;&amp; config.subtitle.length &gt; 0) &#123; %&gt;            &lt;%= config.subtitle %&gt;     &lt;% &#125; else &#123; %&gt;            subtitle     &lt;% &#125; %&gt;&lt;/div&gt;</code></pre><p>修改过后的代码为：</p><pre><code>Code&lt;div class=&quot;title center-align&quot;&gt;     &lt;% if (is_home() &amp;&amp; config.subtitle &amp;&amp; config.subtitle.length &gt; 0) &#123; %&gt;        &lt;%= config.subtitle %&gt;     &lt;% &#125; else &#123; %&gt;        &lt;%= page.title %&gt;     &lt;% &#125; %&gt;&lt;/div&gt;</code></pre><blockquote><p>这个有一点 bug，归档页面标题无法显示，解决办法目前还没有，以后如果解决，会更新文档的！</p></blockquote><p>然后保存，执行 <code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</code> 查看效果即可。</p><p><strong>注意：</strong>获取的 <code>title</code> 标题在 md 文档中的 <code>fromt-matter</code> 属性中 <code>title</code> 的值，可自定义，你只需要去本地找到页面所在的 md 文档中，将其值修改为中文或者英文即可。</p><p>例如：友情链接这一块，你去博客文件的 <code>F:\blog\source\friends</code>（这是我的本地路径）目录，打开目录下的 index.md 文档，将 <code>title</code> 后面的值由原来的 <code>friends</code> 值修改为中文的友情链接或者友人帐或者其他（自定义），然后保存，执行命令，查看效果即可，如没有问题，在部署到代码托 i 管平台。完美！</p><h1 id="七、添加评论系统"><a href="#七、添加评论系统" class="headerlink" title="七、添加评论系统"></a>七、添加评论系统</h1><p>我只说几个常用的评论系统的配置方法，其他的就不说了。</p><h2 id="7-1-添加来必力评论系统"><a href="#7-1-添加来必力评论系统" class="headerlink" title="7.1 添加来必力评论系统"></a>7.1 添加来必力评论系统</h2><p>首先去<a href="https://livere.com/">来必力官网</a>，点击导航栏上的安装，会出现如下图的页面：</p><ul><li>City 版：是一款适合所有人使用的免费版本；</li><li>Premium 版：是一款能够帮助企业实现自动化管理的多功能收费版本。</li></ul><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115142313.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115142313.png" alt="img"></a></p><p>img</p><p>注册完之后，会提示你填写网站的相关信息，如网站链接，网站名称等等，填写完毕之后，会给你一段代码，如下图所示：</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/image-20200115142709585.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/image-20200115142709585.png" alt="img"></a></p><p>img</p><pre><code>Code# Livere comment configuration, the default is not activated# Livere 来必力评论模块的配置，默认为不激活livere:  enable: true   # true即为开启评论系统  uid: #这里填写你的uid</code></pre><p>然后在执行相关的部署命令，然后查看效果即可。</p><h2 id="7-2-添加-Valine-评论系统"><a href="#7-2-添加-Valine-评论系统" class="headerlink" title="7.2 添加 Valine 评论系统"></a>7.2 添加 Valine 评论系统</h2><p><a href="https://valine.js.org/">Valine 官方文档</a></p><p>如果注册过 LeanCloud，请点击此处进行<a href="https://leancloud.cn/dashboard/login.html#/signin">登录</a>，未注册的请点击<a href="https://leancloud.cn/dashboard/login.html#/signup">注册</a></p><p>经过登录或者注册之后再登录，就会进入如下的页面：</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115145855.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115145855.png" alt="img"></a></p><p>img</p><p>创建应用完成后，会出现如下页面，然后点击设置</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115150319.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115150319.png" alt="img"></a></p><p>img</p><p>会出现下面的页面，将其中 APPID 和 APPKey 复制，添加到配置文件中。</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115150641.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115150641.png" alt="img"></a></p><p>img</p><pre><code>Code# The configuration of the Valine comment module is not activated by default.# To use it, activate the configuration item and set appId and appKey.# Valine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey.valine:  enable: false  # true即为开启评论系统  appId:   #此处填写你的appid  appKey:  #此处填写你的appkey  notify: false  verify: false  visitor: true  avatar: &#39;mm&#39; # Gravatar style : mm/identicon/monsterid/wavatar/retro/hide  pageSize: 10  placeholder: &#39;just go go&#39; # Comment Box placeholder  background:  https://cdn.jsdelivr.net/gh/Yafine/cdn@3.1.1/social/comment_bg.png</code></pre><p>然后执行相关部署命令，查看效果即可。</p><h2 id="7-3-添加-Gitalk-评论模块"><a href="#7-3-添加-Gitalk-评论模块" class="headerlink" title="7.3 添加 Gitalk 评论模块"></a>7.3 添加 Gitalk 评论模块</h2><p>首先去这个地方看一下 Gitalk 的效果吧！<a href="https://gitalk.github.io/">传送门</a></p><p>安装步骤如下：</p><ol><li><strong>注册 OAuth Application</strong></li></ol><p>当别人评论你的文章时，会需要它是授权。点击<a href="https://github.com/settings/applications/new">注册 OAuth Application</a> 进行注册，注册界面如下：</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115154248.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115154248.png" alt="img"></a></p><p>img</p><ul><li><strong>Application name：</strong>应用名称，自己随意起名。</li><li><strong>Homepage URL：</strong>博客主页地址，如果有域名，此处填写域名，无域名，填写你的默认 github 地址：如 <code>https://username.github.io</code>。</li><li><strong>Application description：</strong>应用描述，可选，可以写也可以不写。</li><li><strong>Authorization callback URL：</strong>授权后返回的地址，需要与 <strong>Homepage URL</strong> 一致。</li></ul><p>点击 <strong>Register application</strong>（注册）会出现 <strong>Client ID/Secret</strong>，接下来就是将信息填入配置文件中。</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115155054.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115155054.png" alt="img"></a></p><p>img</p><ol><li><strong>新建 GitHub 仓库</strong></li></ol><p>新建仓库就不在多说了，相信大家都会，如果不会的话，上面有写。</p><ol><li><strong>配置 _config.yml 文件</strong></li></ol><pre><code>Yml# the Gitalk config，default disabled# Gitalk 评论模块的配置，默认为不激活gitalk:  enable: true    # true即开启评论模块  owner: Yafine  # 填写你的 github 账户名即可  repo: Yafine-gitalks   # 新建一个仓库或者使用博客托管的仓库也可  oauth:    clientId: #填写你的clientId    clientSecret:  #填写你的clientSecret  admin: Yafine  #填写你的 github 账户名即可</code></pre><ol><li>然后再进行部署步骤即可，第一次查看效果需要登录 github 账号，关联授权后，就可以使用评论系统了。</li></ol><blockquote><p>友情提醒：开启这个评论系统会对主题中的表格有影响，所以根据个人喜好决定是否开启。</p></blockquote><h2 id="7-4-添加-Disqus-评论模块"><a href="#7-4-添加-Disqus-评论模块" class="headerlink" title="7.4 添加 Disqus 评论模块"></a>7.4 添加 Disqus 评论模块</h2><p>还在完善，这个貌似得通过特殊途径才能注册。有时间再写吧。</p><p>你也可以参考这位作者的文档，作者自己搭建的代理：<a href="https://disqusjs.skk.moe/">https://disqusjs.skk.moe/</a></p><h1 id="八、域名解析与绑定"><a href="#八、域名解析与绑定" class="headerlink" title="八、域名解析与绑定"></a>八、域名解析与绑定</h1><p>域名的购买流程我就不说了，相信大家应该都会购买吧，一般都会去阿里云或者腾讯云购买域名。下面就简单的说一下，如何绑定域名并进行解析。</p><p>在这里以腾讯云解析为例（我的域名是在腾讯云购买的），登录腾讯云的控制台，进入到域名管理页面，然后点击解析，进行域名的解析，如下图所示：</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191205232306.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191205232306.png" alt="img"></a></p><p>img</p><p>进入云解析列表，添加记录值如下图所示：</p><p>IP 地址可以提供 cmd 命令得到，命令为 <strong>ping username.github.com</strong>，会得到来自 <code>xxx.xxx.xxx.xxx</code> 的回复，这个就是 github 的 IP 地址，将得到的 IP 地址填入记录值即可，如下图所示。</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191205231816.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191205231816.png" alt="img"></a></p><p>img</p><blockquote><p>上面第一个行的线路类型第一次先选择默认，上面的境外路线，这是我后来配置的双部署，国内访问走 coding 路线，国外访问走 GitHub 路线。</p></blockquote><p><strong>说明：</strong></p><p>以我的域名为例：yafine-blog.cn</p><blockquote><p><strong>提示：</strong>要解析 <code>www.yafine-blog.cn</code>，请填写 www。主机记录就是域名前缀，常见用法如下：</p></blockquote><table><thead><tr><th>主机记录</th><th>说明</th></tr></thead><tbody><tr><td>www</td><td>解析后的域名为 <code>www.yafine-blog.cn</code></td></tr><tr><td>@</td><td>直接解析主域名 yafine-blog.cn</td></tr><tr><td>*</td><td>泛解析，匹配其他所有域名 *.yafine-blog.cn</td></tr><tr><td>mail</td><td>将域名解析为 mail.yafine-blog.cn，通常用于解析邮箱服务器</td></tr><tr><td>二级域名</td><td>如 abc.yafine-blog.cn，填写 abc</td></tr><tr><td>手机网站</td><td>如 m.yafine-blog.cn，填写 m</td></tr></tbody></table><blockquote><p><strong>提示:</strong></p><p>将域名指向云服务器，请选择<strong>「A」</strong>； 将域名指向另一个域名，请选择<strong>「CNAME」</strong>； 建立邮箱请选择<strong>「MX」</strong>，根据邮箱服务商提供的 MX 记录填写。</p></blockquote><table><thead><tr><th>记录类型</th><th>说明</th></tr></thead><tbody><tr><td>A</td><td>用来指定域名的 IPv4 地址（如 8.8.8.8），如果需要将域名指向一个 IP 地址，就需要添加 A 记录。</td></tr><tr><td>CNAME</td><td>如果需要将域名指向另一个域名，再由另一个域名提供 IP 地址，就需要添加 CNAME 记录。</td></tr><tr><td>MX</td><td>如果需要设置邮箱，让邮箱能收到邮件，就需要添加 MX 记录。</td></tr><tr><td>TXT</td><td>在这里可以填写任何东西，长度限制 255。绝大多数的 TXT 记录是用来做 SPF 记录（反垃圾邮件）</td></tr><tr><td>NS</td><td>域名服务器记录，如果需要将子域名交给其他 DNS 服务商解析，就需要添加 NS 记录。</td></tr><tr><td>AAAA</td><td>用来指定主机名（或域名）对应的 IPv6 地址（例如：ff06:0:0:0:0:0:0:c3）记录。</td></tr><tr><td>SRV</td><td>记录了哪台计算机提供了哪个服务。格式为：服务的名字、点、协议的类型，例如：_xmpp-server_tcp。</td></tr><tr><td>显性 URL</td><td>从一个地址 301 重定向到另一个地址的时候，就需要添加显性 URL 记录（注：DNSPod 目前只支持 301 重定向）。</td></tr><tr><td>隐性 URL</td><td>类似于显性 URL，区别在于隐性 URL 不会改变地址栏的域名。</td></tr></tbody></table><blockquote><p><strong>注意</strong>：在这之前需要在站点根目录的 source 目录下新建一个 CNAME 文件，里面写入自己的域名，然后保存，在进行如下的步骤。这样到最后当你在地址栏输入 xxx.github.io 时，才会自动跳转到你的域名。</p></blockquote><p>然后在你的 GitHub 仓库的设置里找到这个页面，将你的域名填到 Custom domain 选项下，强制开启 https，即当你在地址栏输入域名，会自动识别域名为 https 开头。然后进行保存。</p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191205230514.png"><img src="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191205230514.png" alt="img"></a></p><p>img</p><h1 id="九、-博客优化"><a href="#九、-博客优化" class="headerlink" title="九、 博客优化"></a>九、 博客优化</h1><h2 id="1-图片懒加载"><a href="#1-图片懒加载" class="headerlink" title="1. 图片懒加载"></a>1. 图片懒加载</h2><blockquote><p><strong>知识小课堂：</strong>图片加载方式有两种，一个是预加载，另一个就是懒加载，那你了解什么是预加载和懒加载吗？下面来学习一下。</p><p>参考：<a href="https://blog.csdn.net/alex8046/article/details/50388050">图片预加载与图片懒加载（缓载）的区别与实现</a></p></blockquote><ul><li>图片预加载：顾名思义，图片预加载就是在网页全部加载之前，提前加载图片。当用户需要查看时可直接从本地缓存中渲染，以提供给用户更好的体验，减少等待的时间。否则，如果一个页面的内容过于庞大，没有使用预加载技术的页面就会长时间的展现为一片空白，这样浏览者可能以为图片预览慢而没兴趣浏览，把网页关掉，这时，就需要图片预加载。当然这种做法实际上牺牲了服务器的性能换取了更好的用户体验。</li><li>图片懒加载（缓载）：延迟加载图片或符合某些条件时才加载某些图片。这样做的好处是减少不必要的访问数据库或延迟访问数据库的次数，因为每次访问数据库都是比较耗时的即只有真正使用该对象的数据时才会创建。懒加载的主要目的是作为服务器前端的优化，减少请求数或延迟请求数。</li></ul><p><strong>预加载与懒加载的区别之处：</strong></p><p>两者的行为是相反的，一个是提前加载，一个是迟缓甚至不加载。懒加载对服务器前端有一定的缓解压力作用，预载则会增加服务器前端压力。</p><p>使用图片懒加载需要安装插件：<a href="https://github.com/Troy-Yang/hexo-lazyload-image">hexo-lazyload-image</a></p><p>在站点根目录执行下面的命令：</p><pre><code>Bashnpm install hexo-lazyload-image --save</code></pre><p>之后在站点配置文件下添加下面的代码：</p><pre><code>Ymllazyload:  enable: true  # 是否开启图片懒加载  onlypost: false  # 是否只对文章的图片做懒加载  loadingImg: # eg ./images/loading.gif</code></pre><p>最后执行 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code> 就可以看到效果了。</p><p>注意，以下几个小问题针对 matery 主题而言，其他主题是否会出现以下情况目前我也不清楚，如果出现，你在尝试下以下解决方法。(暴力解决法，而不是直接修改懒加载插件😂😂😂)</p><ul><li>问题 1：查看大图，发现全部为 loading 加载图，原因是因为懒加载插件与 <strong>lightgallery 插件</strong>冲突，解决办法如下：</li></ul><p>修改主题文件下的 <strong>matery.js</strong>，在 108 行左右添加以下代码：</p><pre><code>Javascript$(document).find(&#39;img[data-original]&#39;).each(function()&#123;    $(this).parent().attr(&quot;href&quot;, $(this).attr(&quot;data-original&quot;));&#125;);</code></pre><ul><li>问题 2：点击首页 <strong>logo</strong> 不是跳转到首页，而是查看 <strong>logo</strong> 图片，解决办法如下：</li></ul><p>修改主题的 <strong>header.ejs</strong> 文件，原代码为：</p><pre><code>Javascript&lt;div class=&quot;brand-logo&quot;&gt;    &lt;a href=&quot;&lt;%- url_for() %&gt;&quot; class=&quot;waves-effect waves-light&quot;&gt;         &lt;% if (theme.logo !== undefined &amp;&amp; theme.logo.length &gt; 0) &#123; %&gt;         &lt;img src=&quot;&lt;%= theme.logo %&gt;&quot; class=&quot;logo-img&quot; alt=&quot;LOGO&quot;&gt;         &lt;% &#125; %&gt;         &lt;span class=&quot;logo-span&quot;&gt;&lt;%- config.title %&gt;&lt;/span&gt;    &lt;/a&gt;&lt;/div&gt;</code></pre><p>修改为：</p><pre><code>Javascript&lt;div class=&quot;brand-logo&quot;&gt;    &lt;a href=&quot;&lt;%- url_for() %&gt;&quot; class=&quot;waves-effect waves-light&quot;&gt;        &lt;div&gt;            &lt;% if (theme.logo !== undefined &amp;&amp; theme.logo.length &gt; 0) &#123; %&gt;            &lt;img src=&quot;&lt;%= theme.logo %&gt;&quot; class=&quot;logo-img&quot; alt=&quot;LOGO&quot;&gt;            &lt;% &#125; %&gt;            &lt;span class=&quot;logo-span&quot;&gt;&lt;%- config.title %&gt;&lt;/span&gt;        &lt;/div&gt;    &lt;/a&gt;&lt;/div&gt;</code></pre><h3 id="懒加载优化"><a href="#懒加载优化" class="headerlink" title="懒加载优化"></a>懒加载优化</h3><blockquote><p>经过以上操作就已经很完美了，以下内容可做可不做</p></blockquote><ul><li><p>其实第一次加载后本地都是有缓存的，如果每次都把 loading 显示出来就不那么好看</p></li><li><p>所以我们需要对插件进行魔改，让图片稍微提前加载，避开加载动画</p></li><li><p>打开 <code>Hexo根目录</code> &gt;<code>node_modules</code> &gt; <code>hexo-lazyload-image</code> &gt; <code>lib</code> &gt; <code>simple-lazyload.js</code> 文件</p></li><li><p>第 9 行修改为：</p><pre><code>Javascript&amp;&amp; rect.top &lt;= (window.innerHeight +240 || document.documentElement.clientHeight +240)</code></pre></li><li><p>作用：提前 240 个像素加载图片；当然这个值也可以根据自己情况修改</p></li></ul><blockquote><p>参考：<a href="https://blog.sky03.cn/posts/42790.html#toc-heading-5">https://blog.sky03.cn/posts/42790.html#toc-heading-5</a></p></blockquote><h2 id="2-代码压缩"><a href="#2-代码压缩" class="headerlink" title="2. 代码压缩"></a>2. 代码压缩</h2><h3 id="方法一：gulp-代码压缩"><a href="#方法一：gulp-代码压缩" class="headerlink" title="方法一：gulp 代码压缩"></a>方法一：gulp 代码压缩</h3><p>因为 hexo 生成的 html、css、js 等都有很多的空格或者换行，而空格和换行也是占用字节的，所以需要将空格换行去掉也就是我要进行的 “压缩”。</p><p>有人说空格换行能占多少字节？确实占不了多少，但是一个人访问是这么多字节，那么一百人，一万人呢？加起来这量就不少了吧，这都是流量啊！这也是很多 css/js 文件的后缀为*.min.js 或*.min.css 的原因。虽然我们可能没那么多访问量，但是能减小一点资源文件的大小也是对访问速度有那么一点提升的。</p><p>我们采用 gulp 代码压缩方式。</p><p><strong>使用方法：</strong></p><ol><li>进入站点根目录下依次执行下面的命令：</li></ol><pre><code>Code# 全局安装gulp模块npm install gulp -g# 安装各种小功能模块  执行这步的时候，可能会提示权限的问题，最好以管理员模式执行npm install gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save# 额外的功能模块npm install gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del @babel/core --save</code></pre><ol><li>在 Hexo 根目录新建文件 <code>gulpfile.js</code>，并复制以下内容到文件中，有中文注释，可以根据自己需求修改。（注意：文件名不能错，一定为 <code>gulpfile.js</code>，否则会出错！）</li></ol><pre><code>Codevar gulp = require(&quot;gulp&quot;);var debug = require(&quot;gulp-debug&quot;);var cleancss = require(&quot;gulp-clean-css&quot;); //css压缩组件var uglify = require(&quot;gulp-uglify&quot;); //js压缩组件var htmlmin = require(&quot;gulp-htmlmin&quot;); //html压缩组件var htmlclean = require(&quot;gulp-htmlclean&quot;); //html清理组件var imagemin = require(&quot;gulp-imagemin&quot;); //图片压缩组件var changed = require(&quot;gulp-changed&quot;); //文件更改校验组件var gulpif = require(&quot;gulp-if&quot;); //任务 帮助调用组件var plumber = require(&quot;gulp-plumber&quot;); //容错组件（发生错误不跳出任务，并报出错误内容）var isScriptAll = true; //是否处理所有文件，(true|处理所有文件)(false|只处理有更改的文件)var isDebug = true; //是否调试显示 编译通过的文件var gulpBabel = require(&quot;gulp-babel&quot;);var es2015Preset = require(&quot;babel-preset-es2015&quot;);var del = require(&quot;del&quot;);var Hexo = require(&quot;hexo&quot;);var hexo = new Hexo(process.cwd(), &#123;&#125;); // 初始化一个hexo对象// 清除public文件夹gulp.task(&quot;clean&quot;, function () &#123;    return del([&quot;public/**/*&quot;]);&#125;);// 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return// 创建静态页面 （等同 hexo generate）gulp.task(&quot;generate&quot;, function () &#123;    return hexo.init().then(function () &#123;        return hexo            .call(&quot;generate&quot;, &#123;                watch: false            &#125;)            .then(function () &#123;                return hexo.exit();            &#125;)            .catch(function (err) &#123;                return hexo.exit(err);            &#125;);    &#125;);&#125;);// 启动Hexo服务器gulp.task(&quot;server&quot;, function () &#123;    return hexo        .init()        .then(function () &#123;            return hexo.call(&quot;server&quot;, &#123;&#125;);        &#125;)        .catch(function (err) &#123;            console.log(err);        &#125;);&#125;);// 部署到服务器gulp.task(&quot;deploy&quot;, function () &#123;    return hexo.init().then(function () &#123;        return hexo            .call(&quot;deploy&quot;, &#123;                watch: false            &#125;)            .then(function () &#123;                return hexo.exit();            &#125;)            .catch(function (err) &#123;                return hexo.exit(err);            &#125;);    &#125;);&#125;);// 压缩public目录下的js文件gulp.task(&quot;compressJs&quot;, function () &#123;    return gulp        .src([&quot;./public/**/*.js&quot;, &quot;!./public/libs/**&quot;]) //排除的js        .pipe(gulpif(!isScriptAll, changed(&quot;./public&quot;)))        .pipe(gulpif(isDebug, debug(&#123; title: &quot;Compress JS:&quot; &#125;)))        .pipe(plumber())        .pipe(            gulpBabel(&#123;                presets: [es2015Preset] // es5检查机制            &#125;)        )        .pipe(uglify()) //调用压缩组件方法uglify(),对合并的文件进行压缩        .pipe(gulp.dest(&quot;./public&quot;)); //输出到目标目录&#125;);// 压缩public目录下的css文件gulp.task(&quot;compressCss&quot;, function () &#123;    var option = &#123;        rebase: false,        //advanced: true, //类型：Boolean 默认：true [是否开启高级优化（合并选择器等）]        compatibility: &quot;ie7&quot; //保留ie7及以下兼容写法 类型：String 默认：&#39;&#39;or&#39;*&#39; [启用兼容模式； &#39;ie7&#39;：IE7兼容模式，&#39;ie8&#39;：IE8兼容模式，&#39;*&#39;：IE9+兼容模式]        //keepBreaks: true, //类型：Boolean 默认：false [是否保留换行]        //keepSpecialComments: &#39;*&#39; //保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀    &#125;;    return gulp        .src([&quot;./public/**/*.css&quot;, &quot;!./public/**/*.min.css&quot;]) //排除的css        .pipe(gulpif(!isScriptAll, changed(&quot;./public&quot;)))        .pipe(gulpif(isDebug, debug(&#123; title: &quot;Compress CSS:&quot; &#125;)))        .pipe(plumber())        .pipe(cleancss(option))        .pipe(gulp.dest(&quot;./public&quot;));&#125;);// 压缩public目录下的html文件gulp.task(&quot;compressHtml&quot;, function () &#123;    var cleanOptions = &#123;        protect: /&lt;\!--%fooTemplate\b.*?%--&gt;/g, //忽略处理        unprotect: /&lt;script [^&gt;]*\btype=&quot;text\/x-handlebars-template&quot;[\s\S]+?&lt;\/script&gt;/gi //特殊处理    &#125;;    var minOption = &#123;        collapseWhitespace: true, //压缩HTML        collapseBooleanAttributes: true, //省略布尔属性的值 &lt;input checked=&quot;true&quot;/&gt; ==&gt; &lt;input /&gt;        removeEmptyAttributes: true, //删除所有空格作属性值 &lt;input id=&quot;&quot; /&gt; ==&gt; &lt;input /&gt;        removeScriptTypeAttributes: true, //删除&lt;script&gt;的type=&quot;text/javascript&quot;        removeStyleLinkTypeAttributes: true, //删除&lt;style&gt;和&lt;link&gt;的type=&quot;text/css&quot;        removeComments: true, //清除HTML注释        minifyJS: true, //压缩页面JS        minifyCSS: true, //压缩页面CSS        minifyURLs: true //替换页面URL    &#125;;    return gulp        .src(&quot;./public/**/*.html&quot;)        .pipe(gulpif(isDebug, debug(&#123; title: &quot;Compress HTML:&quot; &#125;)))        .pipe(plumber())        .pipe(htmlclean(cleanOptions))        .pipe(htmlmin(minOption))        .pipe(gulp.dest(&quot;./public&quot;));&#125;);// 压缩 public/medias 目录内图片gulp.task(&quot;compressImage&quot;, function () &#123;    var option = &#123;        optimizationLevel: 5, //类型：Number 默认：3 取值范围：0-7（优化等级）        progressive: true, //类型：Boolean 默认：false 无损压缩jpg图片        interlaced: false, //类型：Boolean 默认：false 隔行扫描gif进行渲染        multipass: false //类型：Boolean 默认：false 多次优化svg直到完全优化    &#125;;    return gulp        .src(&quot;./public/medias/**/*.*&quot;)        .pipe(gulpif(!isScriptAll, changed(&quot;./public/medias&quot;)))        .pipe(gulpif(isDebug, debug(&#123; title: &quot;Compress Images:&quot; &#125;)))        .pipe(plumber())        .pipe(imagemin(option))        .pipe(gulp.dest(&quot;./public&quot;));&#125;);// 执行顺序： 清除public目录 -&gt; 产生原始博客内容 -&gt; 执行压缩混淆 -&gt; 部署到服务器gulp.task(    &quot;build&quot;,    gulp.series(        &quot;clean&quot;,        &quot;generate&quot;,        &quot;compressHtml&quot;,        &quot;compressCss&quot;,        &quot;compressJs&quot;,        &quot;compressImage&quot;,        gulp.parallel(&quot;deploy&quot;)    ));// 默认任务gulp.task(    &quot;default&quot;,    gulp.series(        &quot;clean&quot;,        &quot;generate&quot;,        gulp.parallel(&quot;compressHtml&quot;, &quot;compressCss&quot;, &quot;compressJs&quot;,&quot;compressImage&quot;)    ));//Gulp4最大的一个改变就是gulp.task函数现在只支持两个参数，分别是任务名和运行任务的函数</code></pre><ol><li>以后的执行方式有两种：</li></ol><ul><li>直接在 Hexo 根目录执行 <code>gulp</code> 或者 <code>gulp default</code> ，这个命令相当于 <code>hexo cl&amp;&amp;hexo g</code> 并且再把代码和图片压缩。</li><li>在 Hexo 根目录执行 <code>gulp build</code> ，这个命令与第 1 种相比是：在最后又加了个 <code>hexo d</code> ，等于说生成、压缩文件后又帮你自动部署了。</li></ul><blockquote><p>值得注意的是：这个加入了图片压缩，如果不想用图片压缩可以把第 154 行的 <code>&quot;compressImage&quot;,</code> 和第 165 行的 <code>,&quot;compressImage&quot;</code> 去掉即可</p></blockquote><h3 id="方法二：hexo-neat-插件实现代码压缩"><a href="#方法二：hexo-neat-插件实现代码压缩" class="headerlink" title="方法二：hexo-neat 插件实现代码压缩"></a>方法二：hexo-neat 插件实现代码压缩</h3><p>可能以上方法比较复杂，来介绍个简单的，<a href="https://github.com/rozbo/hexo-neat">hexo-neat</a> 插件也是用来压缩代码的，底层也是通过 gulp 来实现的。</p><p>但是这个插件是有 Bug 的：</p><ul><li>压缩 md 文件会使 markdown 语法的代码块消失</li><li>会删除全角空格</li></ul><p>在博客站点根目录执行安装代码：</p><pre><code>Codenpm install hexo-neat --save</code></pre><p>紧接着在站点根目录下的配置文件添加如下代码：</p><pre><code>Codeneat_enable: trueneat_html:  enable: true  exclude:neat_css:  enable: true  exclude:    - &#39;*.min.css&#39;neat_js:  enable: true  mangle: true  output:  compress:  exclude:    - &#39;*.min.js&#39;</code></pre><p>然后直接 <code>hexo cl&amp;&amp;hexo g</code> 就可以了，会自动压缩文件 。</p><p><strong>补充</strong>：为了解决以上 Bug，<strong>对于 matery 主题</strong>（其他主题自行解决）需要将以上默认配置修改为：</p><pre><code>Code#hexo-neat 优化提速插件（去掉HTML、css、js的blank字符）neat_enable: trueneat_html:  enable: true  exclude:    - &#39;**/*.md&#39;neat_css:  enable: true  exclude:    - &#39;**/*.min.css&#39;neat_js:  enable: true  mangle: true  output:  compress:  exclude:    - &#39;**/*.min.js&#39;    - &#39;**/**/instantpage.js&#39;    - &#39;**/matery.js&#39;</code></pre><h2 id="3-CDN-加速"><a href="#3-CDN-加速" class="headerlink" title="3. CDN 加速"></a>3. CDN 加速</h2><blockquote><p>请看我的另一篇博客文章：<a href="https://yafine-blog.cn/posts/ee35.html">https://yafine-blog.cn/posts/ee35.html</a></p></blockquote><h2 id="4-打造稳定快速、高效免费图床"><a href="#4-打造稳定快速、高效免费图床" class="headerlink" title="4. 打造稳定快速、高效免费图床"></a>4. 打造稳定快速、高效免费图床</h2><blockquote><p>请移步另一篇博文：<a href="https://yafine-blog.cn/posts/eb3a.html">https://yafine-blog.cn/posts/eb3a.html</a></p></blockquote><h1 id="十、SEO-优化"><a href="#十、SEO-优化" class="headerlink" title="十、SEO 优化"></a>十、SEO 优化</h1><blockquote><p>请参考这篇博文：<a href="https://blog.sky03.cn/posts/42790.html#toc-heading-18">https://blog.sky03.cn/posts/42790.html#toc-heading-18</a></p></blockquote><h1 id="十一、部署到-Coding-和码云"><a href="#十一、部署到-Coding-和码云" class="headerlink" title="十一、部署到 Coding 和码云"></a>十一、部署到 Coding 和码云</h1><blockquote><p>请参考我的另一篇文章：<a href="https://yafine-blog.cn/posts/51fb.html">https://yafine-blog.cn/posts/51fb.html</a></p></blockquote><h1 id="十二、新建文章自动打开本地-Markdown-编辑器"><a href="#十二、新建文章自动打开本地-Markdown-编辑器" class="headerlink" title="十二、新建文章自动打开本地 Markdown 编辑器"></a>十二、新建文章自动打开本地 Markdown 编辑器</h1><p>写新文章时，需要控制台执行 <code>hexo new &quot;文章名字&quot;</code>，这样就会在<code>_posts</code> 下生成一篇新文章，但需要手动打开，挺麻烦，只需要在站点根目录下新建 <code>scripts</code> 目录，然后在新建 <code>auto_open.js</code>，在文件填入一下内容：</p><pre><code>Codevar spawn = require(&#39;child_process&#39;).exec;// Hexo 2.x 用户复制这段//hexo.on(&#39;new&#39;, function(path)&#123;  //spawn(&#39;start  &quot;markdown编辑器绝对路径.exe&quot; &#39; + path);//&#125;);// Hexo 3 用户复制这段hexo.on(&#39;new&#39;, function(data)&#123;  spawn(&#39;start  &quot;D:\Program Files\Typora\Typora.exe&quot; &#39; + data.path);&#125;);</code></pre><p>其中 <code>&quot;D:\Program Files\Typorae\Typora.exe&quot;</code> 是我本地编辑器的路径，只需要改为你本地编辑器的路径即可，然后在执行 <code>hexo cl &amp;&amp; hexo g -d</code>，部署到 GitHub 即可，以后在发布文章就会自动打开编辑器。</p><p><strong>文章参考来源</strong></p><ul><li><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">matery 主题文档</a></li><li><a href="https://blog.licardo.cn/posts/11199/">Matery 主题配置豆瓣插件</a></li><li><a href="https://www.itrhx.com/2018/08/27/A04-Hexo-blog-topic-personalization/">Hexo 博客主题个性化</a></li><li><a href="https://blog.sky03.cn/posts/42790.html">Hexo 进阶之各种优化</a></li><li><a href="https://blog.hvnobug.com/post/hexo-optimize.html">hexo 博客美化</a></li></ul><p><strong>文章作者:</strong> <a href="mailto:undefined">Yafine</a></p><p><strong>文章链接:</strong> <a href="https://yafine-blog.cn/posts/4ab2.html">https://yafine-blog.cn/posts/4ab2.html</a></p><p><strong>转载自</strong> <a href="https://yafine-blog.cn/">过客～励む</a>！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>无题</title>
      <link href="2021/03/27/wu-ti-1/"/>
      <url>2021/03/27/wu-ti-1/</url>
      
        <content type="html"><![CDATA[<p>小和尚的庙里住进了一位女施主。</p><p>小和尚吓坏了，逃去殿里敲木鱼。山下的女人是老虎，现在老虎居然住进庙里了，看来自己和师父是要被吃了。</p><p>女施主闲暇无事，也走到殿里，看见一位小师父红着脸拼命敲木鱼，好奇地过去看看。</p><p>吓得和尚躲到佛像后面。</p><p>女施主蹲在地上，借着地上薄薄一层香灰写：我饿了。</p><p>和尚呆呆坐回她面前，继续敲木鱼，浑身发抖。</p><p>女施主又写：怎么了？</p><p>和尚：你要吃的，我舍身喂虎。</p><p>女施主美得就像个菩萨，可惜不会说话。随身带着把琵琶，下午拨弄几下靡靡之音。寺里暮鼓晨钟，多了点红尘旖旎。</p><p>庙里就两个和尚，她过来借住，帮忙做些僧衣缝补。小和尚看她坐在灯下补衣服，心怦怦跳。</p><p>女施主发现他偷看，对他笑笑，如莲花开。</p><p>小和尚问师父，为什么让女施主住进来？</p><p>师父说，有没有人住进来，住的人是男是女，都是你的执着。</p><p>和尚：可是弟子心静不下来。</p><p>师父：那就还俗去。</p><p>和尚吓坏了：弟子可没有犯色戒！弟子皈依佛！</p><p>师父说，佛何须你的皈依啊。佛只需你欢喜。你在佛门若欢喜，那便在佛门。你在俗世若欢喜，那便还俗去。</p><p>和尚每天给庙里做饭，给女施主那份多盛了些菜。她每次都在桌上写：很好吃。</p><p>小和尚便欢喜。</p><p>小和尚是师父从山野里捡来的孤儿，从小养在庙里，从来没想过当和尚之外的事。师父一直说，你该还俗去，还了俗才知道，自己愿不愿出家。</p><p>很多人出家是因为知道自己该四大皆空，也有些人，比如小和尚，是因为没得选。</p><p>女施主喜欢吃他做的菜，会弹琵琶谢他，甚至教他弹琵琶。</p><p>有一天，女施主下山去卖山上的药草，一去不返。</p><p>小和尚敲木鱼，听木鱼都是琵琶的声音。他吃饭，好像她就坐在对面。小和尚跪在佛前，他的心不欢喜，像是空了一块。</p><p>他决定听师父的，下山去。去找女施主。</p><p>山下红尘茫茫，他却连女施主叫什么都不知道。只知道她美如菩萨，擅弹琵琶。小和尚带着她的琵琶，一路走一路弹，弹她教的那首曲子。</p><p>他一走就是很多年。头发蓄了起来，像个寻常的乐师，靠弹琵琶为生。</p><p>有个人找到了他，说，一家歌楼希望他去，教习歌女们弹琵琶。</p><p>因为歌楼的主人听到他的琵琶声，十分意外。这座歌楼里曾有一位倾城的歌女，曲艺绝艳。</p><p>他的琵琶声和那个歌女很像。</p><p>歌女是卖艺不卖身的，平时只弹唱和教习。有某位大人想强逼她，逼到了最后，她把自己的舌头割了，带着琵琶远走他乡。</p><p>女施主没有舌头，她从来不知道他做的菜是什么味道的。</p><p>那位大人寿宴时，叫歌楼里的班子进府表演。他作为教习师父一起去了，想去找女施主。</p><p>女眷们穿金戴银，其中却没有她。</p><p>宴席间隙，他问府里的佣人，这里有没有一位擅弹琵琶的夫人？佣人顿时一脸嫌恶：以前主人看上一个歌女，结果她自己割了舌头逃了，后来被抓回来。</p><p>他问，之后呢？</p><p>之后，抓回来又不从，还想逃，最后被砍了手脚丢在猪圈里成了人彘，早就疯了。</p><p>他抱着琵琶，在恶臭的猪圈里找到了一个匍匐畸形的人。他把她扶起来，疯子低着头，扔在地上找吃的。</p><p>夜色下，他在她面前双手合十。这时，她忽然平静下来，呆呆看着这个乐师。</p><p>旋即落了泪，像以前那样笑了，仍像个菩萨。</p><p>他说，你要吃的，我舍身喂虎。</p><p>人们发现猪圈里的人彘死了，被一根琵琶弦勒死的。</p><p>他回了山中古庙。老和尚已经坐化归去，青苔落叶覆满佛堂。和尚翻出来自己从前的僧衣，上面还有菩萨织补过的针脚。他回佛前坐下，又仿佛是那个小和尚。</p><p>古庙熊熊燃烧，把一切都付之一炬。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>摘抄</title>
      <link href="2021/03/27/zhai-chao/"/>
      <url>2021/03/27/zhai-chao/</url>
      
        <content type="html"><![CDATA[<h1 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h1><p>1.饮其流者怀其源,学其成时念吾师  </p><p>2.</p><p>在未来的漫长日子里，<br>我们还会面对很多很多的选择题，<br>这不是一份考卷，没有标准答案，<br>也没有所谓的百分百满分的人生…… </p><p>但始终希望你能够认真思索，<br>出自自己的本心，<br>一直地一路向前！<br>不害怕失去，也不恐惧忧伤！</p><p>我们的人生没有那么多如果，<br>更没有可以真正重来的机会，<br>而正是我们没有多少选择的机会，<br>所以一旦做出了选择<br>就一定要努力咬牙坚持地走下去！<br>一步一步去完善自己，<br>直到在下一个美好时刻<br>遇见更好的自己！</p><p>-the story always begins right now-<br>-期待你书写自己的故事 加油-  </p><p>3.我宁愿花20分钟去绕路，也不愿意花10分钟堵在路上。  </p><p>4.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>动漫下载网站</title>
      <link href="2021/03/27/7-ge-mian-fei-gao-zhi-liang-dong-man-xia-zai-wang-zhan/"/>
      <url>2021/03/27/7-ge-mian-fei-gao-zhi-liang-dong-man-xia-zai-wang-zhan/</url>
      
        <content type="html"><![CDATA[<h1 id="7个免费-amp-高质量动漫下载网站"><a href="#7个免费-amp-高质量动漫下载网站" class="headerlink" title="7个免费&amp;高质量动漫下载网站"></a>7个免费&amp;高质量动漫下载网站</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>不知道大家都有没有下载，或者收藏超清蓝光版动漫资源的兴趣呢？</p><p>虽然现在大多动画都可以在B站、A站啊等视频网站上在线观看，但没有的资源也不少。</p><p>或者对在线视频的完整度、清晰度、字幕等有更高要求，想要下载观看无删减、高质量、收藏资源等。</p><p>就需要本文介绍的这些「高质量动漫下载网站」了！(๑•̀ㅂ•́)و✧</p><h2 id="1-VCB-Studio-大家一起实现的故事！"><a href="#1-VCB-Studio-大家一起实现的故事！" class="headerlink" title="1.VCB-Studio - 大家一起实现的故事！"></a>1.VCB-Studio - 大家一起实现的故事！</h2><p>​    •    地址：<a href="https://vcb-s.com/">https://vcb-s.com</a></p><p>​    •    特点：资源质量极高，适合收藏</p><p>相当专业的一个网站，资源质量极高！</p><p>全部都是10bit / 8bit 的 1080P / 720P 超高清蓝光 BD 版本，收藏级资源。</p><p>因此资源体积也比较大一些，没有字幕的资源可以去论坛（<a href="https://bbs.vcb-s.com)里搜索./">https://bbs.vcb-s.com）里搜索。</a></p><h2 id="2-诸神字幕组"><a href="#2-诸神字幕组" class="headerlink" title="2.诸神字幕组"></a>2.诸神字幕组</h2><p>​    •    地址：<a href="https://subs.kamigami.org/">https://subs.kamigami.org</a></p><p>​    •    特点：中日双语字幕非常给力</p><p>诸神字幕组的中日双语字幕质量很高，也是收藏必备！</p><p>尤其是对日语感兴趣儿的小伙伴们，看番学习两不误~</p><h2 id="3-爱恋动漫BT下载"><a href="#3-爱恋动漫BT下载" class="headerlink" title="3.爱恋动漫BT下载"></a>3.爱恋动漫BT下载</h2><p>​    •    地址：<a href="https://www.kisssub.org/">https://www.kisssub.org</a></p><p>​    •    特点：更新速度快，资源丰富</p><p>包含了众多字幕组，更新速度很快，追番 &amp; 收藏都不错。</p><p>界面简洁漂亮，提供磁力链接和种子下载，搜索番剧时的筛选功能也很好用。</p><p>详情页面的左侧还提供了 trackers，可以帮助我们优化下载连接情况和下载速度。</p><h2 id="4-萌番组"><a href="#4-萌番组" class="headerlink" title="4.萌番组"></a>4.萌番组</h2><p>​    •    地址：<a href="https://bangumi.moe/">https://bangumi.moe</a></p><p>​    •    特点：界面友好，番剧时间轴很不错</p><p>同样是一个颜值很高的网站，提供磁力链接和种子下载。</p><p>点击菜单按钮可以打开时间轴，按更新日期查看，很适合追新番。</p><h2 id="5-AGE动漫"><a href="#5-AGE动漫" class="headerlink" title="5.AGE动漫"></a>5.AGE动漫</h2><p>​    •    地址：<a href="https://www.agefans.net/">https://www.agefans.net</a></p><p>​    •    特点：可在线，提供百度网盘</p><p>AGE动漫是一个非常不错的动漫在线观看网站，每部动画都提供了多个资源可供选择。</p><p>很赞的是，还附带了百度网盘资源，有度盘下载需求的朋友们必须收藏了！</p><h2 id="6-动漫花园资源网"><a href="#6-动漫花园资源网" class="headerlink" title="6.动漫花园资源网"></a>6.动漫花园资源网</h2><p>​    •    地址：<a href="https://share.dmhy.org/">https://share.dmhy.org</a></p><p>​    •    特点：老牌动漫网站，资源丰富</p><p>著名的动漫资源网站，资源超丰富，新旧番剧动画都有，下载形式为磁力链接。</p><p>因为资源太多了，所以查找收藏资源的话需要慢慢对比挑选。</p><p>（遗憾的是不一定能打开）</p><h2 id="7-蜜柑计划-Mikan-Project"><a href="#7-蜜柑计划-Mikan-Project" class="headerlink" title="7.蜜柑计划 - Mikan Project"></a>7.蜜柑计划 - Mikan Project</h2><p>​    •    地址：<a href="https://mikanani.me/">https://mikanani.me</a></p><p>​    •    特点：聚合众多字幕组资源</p><p>蜜柑计划是最近新发现的一个网站，体验非常不错。</p><p>它在每部动漫的详情页，都列出了所有对应的字幕组的资源。</p><p>我们可以自由地选择喜欢的字幕组进行下载。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>* <a href="https://vcb-s.com/">https://vcb-s.com</a></p><p>* <a href="https://subs.kamigami.org/">https://subs.kamigami.org</a></p><p>* <a href="https://www.kisssub.org/">https://www.kisssub.org</a></p><p>* <a href="https://bangumi.moe/">https://bangumi.moe</a></p><p>* <a href="https://www.agefans.net/">https://www.agefans.net</a></p><p>* <a href="https://share.dmhy.org/">https://share.dmhy.org</a></p><p>* <a href="https://mikanani.me/">https://mikanani.me</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>无题</title>
      <link href="2021/03/27/ru-he-yi-ni-shi-ming-liao-tu-ran-you-yi-tian-ni-hui-fu-liao-shi-li-nao-hai-li-que-you-yi-ge-sheng-yin-shuo-bie-gao-su-ta-men-ni-kan-de-jian-wei-kai-tou-xie-wen-zhang/"/>
      <url>2021/03/27/ru-he-yi-ni-shi-ming-liao-tu-ran-you-yi-tian-ni-hui-fu-liao-shi-li-nao-hai-li-que-you-yi-ge-sheng-yin-shuo-bie-gao-su-ta-men-ni-kan-de-jian-wei-kai-tou-xie-wen-zhang/</url>
      
        <content type="html"><![CDATA[<h1 id="如何以「你失明了，突然有一天你恢复了视力，脑海里却有一个声音说『别告诉他们你看得见』」为开头写文章？"><a href="#如何以「你失明了，突然有一天你恢复了视力，脑海里却有一个声音说『别告诉他们你看得见』」为开头写文章？" class="headerlink" title="如何以「你失明了，突然有一天你恢复了视力，脑海里却有一个声音说『别告诉他们你看得见』」为开头写文章？"></a>如何以「你失明了，突然有一天你恢复了视力，脑海里却有一个声音说『别告诉他们你看得见』」为开头写文章？</h1><p>你失明了，突然有一天你恢复了视力，脑海里却有一个声音说：「别告诉他们你看得见。」</p><h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><p>你对脑海中的声音感到诧异，但并没有放在心上，仅当作是狂喜时产生的幻听。</p><p>夕阳透过窗户把房间照得昏黄，你贪婪地用视线舔舐过墙上褪色的海报，书桌上整齐排列的书籍，以及床头柜上摆放的一朵鲜花，此时你才发现万物在你看来是如此可爱，你恨不得把它们都装进自己的眼睛。</p><p><strong>「铃——铃——铃——」</strong></p><p>过了好一会儿，你的喜悦被一阵铃声打断，桌上的闹钟提醒你此时已是下午【6：00】，天色将暗。</p><p>你打算下楼走走，看看夕阳无限好的的黄昏，看看街上来来往往的行人。</p><p>临出门的时候你扫了一眼墙角的盲杖，没有选择携带。</p><p>但还未开门，你的父母就推门而进，你虽然有些奇怪父母下班比往常早了一些，但没有多言，你兴冲冲地告诉了他们你恢复了视力，他们也很高兴，甚至为你做了一顿丰盛的大餐。</p><p>这一餐你吃得很高兴，甚至和父母说了很多平日里羞于出口的话。</p><p>他们只是听着，默默点头，没有多话。</p><p>可能是因为开心，晚上你睡觉的时候，嘴角都带着微笑。</p><p>意识昏昏沉沉中，好像过了很久，又好像是一瞬，</p><p>你再次睁开眼，眼前是温柔的橘光，你正坐在书桌前的椅子上发呆。</p><p>有个声音突然在你脑海中响起：「别告诉他们你看得见。」</p><p>你愣愣地看了眼闹钟，此时，显示的时间是下午【5：45】。</p><p><strong>这是你的第一次死亡。</strong></p><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p>这次你清清楚楚地听到了那个声音，你恍惚了一瞬，赶紧追问：「你是谁？」</p><p>没有回应。</p><p>你视线扫过房间，产生了怪异的感受。</p><p>比如墙上的海报，是一张科比投篮的瞬间，你明明记得科比是双手持球，画面中却是单手，又比如，桌上的书籍打开，里面满是模糊的字迹，还有大段大段的空白和错别字。</p><p>正在你感到不对时，桌上的闹钟响了。</p><p>铃声回荡在空荡的房间里，窗户明明是关着的，你却感到万分的凉意。</p><p>仿佛有看不见的风从窗户吹进进来。</p><p><strong>时间又到了【6：00】</strong></p><p>这次你没有选择出门，等到你稍微冷静下来，时间又过去了 10 分钟。</p><p>奇怪的是，这段时间，你的父母并没有回来。</p><p>你开始怀疑是不是自己多心了，也许之前发生的只是一场梦，于是你打算下楼散散步。</p><p>但握住门把手的那一刻，门开了。</p><p>你的父母推门而进，你们对视着，接下来的一切就顺其自然地发生了，你告诉了他们你视力已然恢复，他们做了一顿大餐，在他们热烈的目光中，你却兴致缺缺，沉默着吃完了一顿饭，不知道在想些什么。</p><p>混乱的思绪在你脑海中反复缠绕，让你心力交瘁。</p><p>晚上，你翻来覆去没有睡着，待月上中霄，半梦半醒中你听到房门被打开的声音。</p><p>你眯开眼，朦胧中看到一个黑影逆着光走过来。</p><p>你的喉咙一疼，接着是窒息的痛苦，你挣扎着，蠕动着，意识逐渐陷入了黑暗。</p><p>……</p><p>你猛地睁开眼，大口喘着粗气，双手捂住喉咙，一阵心悸。</p><p>心脏猛烈的跳动告诉你你的心情并不平静。</p><p>有个声音突然在你脑海中响起：「别告诉他们你看得见。」</p><p>你慌张地看向闹钟，此时，显示的时间仍是下午【5：45】。</p><p><strong>这是你的第二次死亡。</strong></p><h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><p>那种真实的痛苦让你不再怀疑死亡回归的真实性，于是你开始思考一些问题。</p><p>首先，你是被谁杀死的？父亲，母亲还是其他人？</p><p>其次，为什么会有人要杀你？</p><p>再次，死亡回归和各种诡异的事情是怎么回事？</p><p>最后，也是最重要的一个问题，你该怎么做？</p><p>前几个问题都无从下手，你只好从最后的问题入手，思考应对之策。</p><p>你先是在脑海中呼叫了那个声音，发现未果后，你决定听从他的建议，继续假装盲人，按兵不动。</p><p>你花了几分钟时间控制好表情，拿起手边的盲杖，准备在你的父母回家前出门。</p><p>你小心翼翼缓步走到门口，准备从猫孔里向外探查情况。</p><p>客厅里静悄悄的，只有秒针转动的声音，咚、咚、咚，一声声敲在你的心脏上。</p><p>你屏紧呼吸，死寂的氛围让你心跳不自觉加快。</p><p>你的眼睛渐渐贴近猫孔，你甚至下意识地咽了口唾液。</p><p>从狭小的孔洞间，你望到两个面容呆板的人，像木头一样站在门口。</p><p>正是你的父母。</p><p>你继续不动声色，却发现门口的男人突然动了一下，咧开嘴露出了诡异的笑。</p><p>紧接着猫孔上猛地出现一只眼睛，与你隔门相对！</p><p>你被吓了一跳，心脏仿佛骤停了一下。</p><p>一瞬间，你不知哪来的勇气，直身开门！</p><p>门口，你的父母，站在那里，无声无息，好像不曾动过。</p><p>你用盲杖探路，装作没看到他们。</p><p>然而在你看不到的背后，他们僵硬地一寸寸转头，视线直直地盯着你。</p><p>你手摸住了楼梯扶手，心中莫名松了一口气，心想终于可以下楼。</p><p>但下一瞬间，你感觉背后突然传来一股强大的推力。</p><p>你径直摔下楼梯，甚至来不及体验疼痛就眼前一黑，失去意识。</p><p>……</p><p><strong>时间，下午【5：45】</strong></p><p>你长吐一口气来缓解惊惧，这次你没有停留，决定径直走向门口。</p><p>在猫孔里再次发现了那只眼睛后，你心里闪过什么，最终还是开了门。</p><p>……</p><p><strong>时间，下午【5：45】</strong></p><p>你若有所思地睁开眼，接连两次的死亡让你意识到了什么。</p><p>你的视线透过窗户，望向了无垠的黄昏。</p><p>「别告诉他们你看得见。」那个声音又悠悠地响了起来。</p><p><strong>这是你的第三和第四次死亡。</strong></p><h3 id="四"><a href="#四" class="headerlink" title="四"></a>四</h3><p>你的父母会阻碍你出门，并与时间无关，这一点已在接连的死亡中得证。</p><p>你甚至开始怀疑，他们是不是你的父母。</p><p>随着【6：00】的铃声响起，你开始想的更多，但每一次对过去的回想都让你头痛欲裂。</p><p>好像身体在用疼痛抗拒着回忆。</p><p>你甚至想不起来自己失明多久，因何原因。</p><p>你无奈放弃了思考，这背后浓厚的疑云却激发了你的窥探欲，你发誓一定要查个水落石出。</p><p>既然门走不通，只好另寻他路，比如：窗户。</p><p>你家住六楼，相对那些高层来说，并不算太高，加上每一层都有开放的阳台，完全可以借助绳索下去。</p><p>仅花了半个小时，你就把被罩、床单等织物拧搓成了结实的长绳，并固定在壁挂上，做了一个简单的速降装置。</p><p><strong>时间【6：30】</strong></p><p>和过去相同，你的父母在这个时候下班回家，并开始做饭。</p><p>你隔着卧室门对他们喊了一句，今天你不饿，晚上吃饭不用叫你。</p><p>在听到了肯定的回复后，你放下心来。</p><p>你踩着书桌蹑手蹑脚爬到窗户上，握住绳索，绷紧身体一寸寸下挪。</p><p>夕阳昏黄的光打在你身上，在这十几米的高空中，相较于恐惧，你感到更多的是自由。</p><p>你好像比自己想象的厉害，几分钟过去，你已经快下降到五楼的高度。</p><p>接下来，你只需跳进五楼的阳台，就能从屋内开门，然后下楼了。</p><p>五楼是个上晚班的小姐姐，工作时间从晚 6 点到凌晨 2 点，平日你和她聊过多次，知道她的作息时间，此时肯定不会在家，所以你肯定不会被发现，可以放心行动。</p><p>你控制好呼吸，准备最后的下降。</p><p>但下一刻，你视线的下方，眼角的余光中，一只手臂从阳台上伸出，抓住了绳子。</p><p>你感到一阵剧烈的晃动，在跌落的瞬间，你看到一张没有生气的脸。</p><p>砰——</p><p>随着一声重物坠地的声响，你最后的视线被血覆盖，陷入黑暗。</p><p>……</p><p><strong>时间下午【5：45】</strong></p><p><strong>「别告诉他们你看得见。」</strong></p><p>随着那个声音再次响起，你的拳头奋力锤在了书桌上。</p><p><strong>「草！」</strong></p><p>这是你的第五次死亡。</p><h3 id="五"><a href="#五" class="headerlink" title="五"></a>五</h3><p>也许是已经开始习惯死亡，你的愤怒并未持续多久，你很快冷静下来。</p><p>这次的死亡告诉你，窗户出逃的路线行不通。</p><p>当然，你会想更多，比如五楼的小姐姐为什么会在在家，联想到之前你父母还未下班就站在门口情景，你心里闪过一个念头，也许，他们从没有真正离开过。</p><p>你无力地往椅背上一躺，看向那张发黄的海报。</p><p>不知道是不是错觉，你觉得里面的人似乎……动了一下。</p><p>这次的死亡，让你变得十分慎重。</p><p>你没有走出卧室，一直呆到【6：30】你的父母回来，吃过饭后，你同往常一样，打开收音机，听了 1 个小时的相声和 2 个小时的有声小说，最后听着网课入睡。</p><p>这一夜很平静，你早早醒了过来。</p><p>在你穿衣的时候，房门被打开，你的母亲走了进来，她手里拿着一朵康乃馨，默默地走到你的床头，把花瓶里枯萎的花拔出，换上新鲜的花枝，整个过程中，你没有一次直视过她的方向。</p><p>同样，整个过程中，她的视线却从未离开过你。</p><p>她在……监视我？你这么想到，但面上不动声色。</p><p>早上【7：30】是你父母上班时间，匆匆吃过早餐，他们跟你告别。</p><p>你坐在餐桌上说，出门注意安全。</p><p>听到背后传来关门声后，你放下碗筷，准备回卧室，但转过身的那一刻，你的冷汗瞬间打湿了背。</p><p>他们像两墩石俑般站在门前，紧紧盯着你。</p><p>你不敢发出声音，紧抓手边的盲杖，手心的汗粘糊糊粘在握手上，像在握一条鱼。</p><p>我该怎么办？我该怎么办？我该怎么办？</p><p>电光火石间，你心绪百转。</p><p>最终，你还是照往常一样，回卧室拿了钥匙，准备去楼下找陈老头一起听书。</p><p>这是你平日常做的事情之一。</p><p>小区有个篮球场，但却没几个人玩篮球，于是这地方便成了老头老太下棋、唠嗑、晒太阳的聚集地，与家中相比，显然你更喜欢这里，因为这里有人的声音，有生气。</p><p>你很容易就出了门，你的父母并没有阻拦你，反而为你让开了路。</p><p>他们跟在你身后，像两只影子，没有声音。</p><p>你越往下走，越是浑身发寒。</p><p>破旧昏暗的楼道里，每层每户门前都站着人，他们站在阴影中，用无神的眼睛盯着你。</p><p>你像是误入了蝙蝠的洞穴，每下一层，都在接近地狱。</p><p>你的背后是无数影子，眼前却没有光。</p><h3 id="六"><a href="#六" class="headerlink" title="六"></a>六</h3><p><strong>时间上午【9：00】</strong></p><p>你和陈老头并排坐在篮球场边的长椅上，手边的收音机发出砂砾摩擦的沙沙声。</p><p>郭德纲的声音开始断断续续。</p><p>你和陈老头仍在有一茬没一茬地聊着，偶尔也会附和地笑几声。</p><p>天上有朵厚重的云挡住太阳，投下一片阴翳，这本是一个普通的上午，阳光和煦，秋风飒爽，周围有人声，你也不会感到寂寞。</p><p>只是你嘴角僵硬的弧度暴露了你并不是多么惬意，在你视线内，你的父母和同单元的住户都静静站在树荫下，一动不动，老头老太则坐在马扎上说话唠嗑，并时不时看向你，初秋的温度并不低，甚至还带有酷暑的余温，但你背后却渗透了冷汗。</p><p>你很快受不了这种注视，你靠在了椅背上，头颅微微扬起，看着云。</p><p>也许只有云朵的变幻才能让你放松下来。</p><p>你逐渐放松下来，并思索起下一步的计划。</p><p>虽然有些不解，但目前看来，只要你不被人发现可以看见，就是安全的。</p><p>时间一点点推移，第一缕刺目的光从云缝中投射在你的脸上，你情不自禁地用手遮了遮眼。</p><p>这一刻，人群的声音戛然而止。</p><p>无数张脸同时转向你。</p><p>诡异的寂静里，只有收音机里在沙沙作响。</p><p>你心脏开始加剧跳动，好像有一种无言的恐惧，你匆匆向陈老头告别，快步离开了。</p><p>直到关上房门的那一刻，你才静下心来。</p><p>接下来你忐忑地度过了一天，直到睡前都没敢再做些什么。</p><p>你以为白天的事就这么过去了，心神的疲惫使你就这么睡了过去。</p><p><strong>凌晨【2：00】</strong></p><p>你朦朦胧胧中听到什么悉索的声音，警惕地清醒了过来，并准备起身。</p><p>你娴熟地在黑暗中穿起衣服。</p><p>空气里好像有股难闻的气味，让你耸了耸鼻子。</p><p>你忍不住打了个喷嚏，随着这声喷嚏响起的还有一声巨响。</p><p><strong>「砰！」</strong></p><p>黑暗中，你的眼前先是闪过一缕火光，接着是汹涌的气浪，轰隆的声响，你被气浪推飞，撞碎玻璃，飞出窗外。</p><p>最后，你看到的是无边夜色里张牙舞爪的火焰。</p><p>犹如恶魔。</p><p>……</p><p><strong>时间下午【5：45】</strong></p><p>你猛地睁开了眼。</p><p><strong>「别告诉他们你看得见。」</strong>声音如约而至。</p><p>这是你的第六次死亡。</p><h3 id="七"><a href="#七" class="headerlink" title="七"></a>七</h3><p>这次醒来，你似乎有些疲惫。</p><p>沐浴着黄昏的光，你沉默了很久，这次的探索虽不尽如人意，但也基本达成了你的目的。</p><p>这是你存活时间最长的一次轮回，这次轮回中，你第一次走出单元楼，到达了篮球场，确认了包括父母在内，整个小区所有人的怪异行为，你第一次活过了两天，并得到了更多的细节信息，当然，最为重要的是你终于相信了那个声音。</p><p><strong>「别告诉他们你看得见。」</strong></p><p>确实，只要不被发现自己能够看见，就不会有危险。</p><p>接下来只要继续如此，必然能够一点点接近真相，而在此之前你需要做的就是搜集信息。</p><p>因此，你需要活得更久，走得更远。</p><p>注意每条有用的信息，并把它们串联。如果真相是一幅拼图，那么信息就是无数碎片。</p><p>你只是个普通人，没有福尔摩斯的智慧和推理能力，能做的就只有靠自己的细心和耐性，借助庞大的信息来还原本相。</p><p>你开始注意更多平时疏漏的细节，连房间都重新翻了一遍。</p><p>虽然没有找到更多新东西，但你确实发现了些奇怪之处，比如墙上的海报，这个被你注意过几次的海报，又出现了新的变化，在科比身后的看台上，原本端坐的模糊人影竟各有姿态，他们的脸被蒙上一层阴影，看不清神情，他们在做什么？还有书桌上的书籍，里面的文字均被扭曲成怪异的蝌蚪文，并且相较于上次，里面的空白也在逐渐增多，经常一连十几张空页。</p><p>你默默记下这些，准备下次轮回继续验证。</p><p>……</p><p><strong>时间下午【5：45】</strong></p><p>又渡过四次死亡后，你到达了第十一次轮回，刚睁开眼，你便瘫坐地面。</p><p>整个人苍白如纸，额上尽是虚汗，你紧咬牙关，才挺了过去。</p><p>在几次的轮回中，你发现自己的精神越来越差，开始还只是有点疲倦，到后两次轮回时已是疼痛难忍，像有竹刺在肉里挑动你的神经。</p><p>你甚至开始怀疑死亡回归，是不是真的可以无限次下去。</p><p>当然，四次轮回也带给你远比之前多得多的信息，四次轮回中最短的一次是三天，最长的一次足有一周。</p><p>除了一处地方外，你的活动范围扩大到了整个小区，十二栋楼、两处花园均被你走遍，虽然你也试图过离开小区，但不管怎么努力，都无法成功，四周高耸的围墙和紧锁的铁门如同天堑隔断了你和外界。</p><p>你只好把目光重新锁回小区。那处未曾踏足的地方，那处身体恐惧靠近，甚至潜意识也在有意避让的地方。</p><p>你明白，如果有答案的话，只可能是那里了。</p><h3 id="八"><a href="#八" class="headerlink" title="八"></a>八</h3><p>你说的地方是位于七号楼北面，小区东北角的一处简陋别墅。</p><p>那里本是售楼处，楼盘售完后，就被小区宗教人士改成了教堂，只留下几间屋子给物业办公。</p><p>你对别墅印象不多，只记得外墙上爬满爬山虎，风起时叶片沙沙作响，冷得厉害。</p><p>这个晚上，你没有睡着，恍惚中，你甚至觉得有风从别墅深处吹向你的房间，脖颈处嗖嗖发凉，你不由裹紧了被子。</p><p>被窝的温暖给了你些许安全感，你开始闭眼在脑中整理信息。</p><p>首先是海报确实在发生改变，如今观众席上只剩寥寥几人，篮球也消失在海报上，其次书籍的空白也越来越多，半本书都没有一个字，而且在你几次出门的时候小区墙壁的颜色也在不断变化，那些蓝色黄色的墙漆正在逐渐褪去，就好像……这个世界正在消失些什么。</p><p><strong>翌日，上午【9：00】</strong></p><p>你拄着盲杖下楼，虽然走过多次楼梯，但看到那些眼睛，你仍不寒而栗。</p><p>到别墅需要经过小花园，穿过一条石子路，短短的路程只需 2 分钟就能走完，但你却已经在此踟蹰了 15 分钟。</p><p>这种犹豫一半来源于自身的抵触，另一半则是身后的声音。</p><p>此前，你已经习惯有人在身后无声息的跟随，如同影子。</p><p>但现在你每次落步，都会有同样的脚步声落下，几十道脚步声响成一个，开始还很轻，但随着你前行，声音也越来越大，你甚至听得出他们和你之间的距离也在拉近。</p><p><strong>「咚、咚、咚！」</strong></p><p>比脚步声更响的是你的心跳，你的呼吸也变得紊乱。</p><p>你没敢回头看，心下一横，决定赌一把。</p><p>你快步跑了起来，只要能到别墅中，哪怕这次死亡也是值得的。</p><p>石子路的尽头是座平桥，下面有个很浅的池塘，只要跨过这座石桥你就能一鼓作气冲进别墅。</p><p>别墅的样貌在你眼中越来越清晰，茂密的爬山虎爬满了破旧的外墙，暗红的叶片层层覆盖，只露出几个狭小的窗户，大门敞开，里面一片幽暗，像是能吞噬光的洞穴。</p><p>你跑动着，身后的脚步声越来越近。</p><p>你身体紧绷，一个腾跃，冲上了石桥，脚步声戛然而止。</p><p>你站在石桥上回头，发现人群像一棵棵树僵立着，止步不前。</p><p>好像有一条无形的线隔断了他们与石桥。</p><p>果然这里是不同的，他们不敢靠近，你赌赢了，你这么想着，莫名松了口气，转身向别墅走去。</p><p>但下一刻，你听到微弱了的水声。</p><p>一只手猛地从桥下伸出，握住了你的脚踝，你身体一斜摔下池塘。</p><p>你挣扎着想要起身，但好像有股力量在按住你，让你难以为继，水顺着你的呼吸道灌进肺泡，你的气管被水填满，接下来你再次感到了窒息的痛苦，很快，你就因缺氧失去力量，放弃了挣扎。</p><p>最后你透过水面看到的是摇晃的阳光和一张狰狞的脸。</p><p><strong>你的意识陷入了黑暗。</strong></p><p>……</p><p><strong>时间下午【5：45】</strong></p><p>「别告诉他们你看得见。」</p><p>你恐惧地睁大眼睛，太阳穴青筋暴起，大口大口地喘气，却仍缓解不了这种痛苦。</p><p>你身体蜷缩成一团，无声嘶吼，喉咙蹦出几个音节，像一只沙哑的卡带。</p><p>这是你的第十一次死亡</p><h3 id="九"><a href="#九" class="headerlink" title="九"></a>九</h3><p>这次的痛苦比你预想的要持久，铃声响过【6：00】时刻，你才打着摆子站起身。</p><p>从痛苦中挣脱的意识仍有些滞涩，但你已经可以进行简单的思考。</p><p>你首先发现不同的是眼睛，眼前像是起了层薄雾，看什么都是朦朦胧胧，近处还好，稍远一点便只能看到简单的轮廓和模糊的色块，世界在你眼前变成了巨幅抽象画。</p><p>其次，你发现海报上只剩下空荡的观众席，和场中央半颗焦黑的篮球；桌上的书籍也变成了一张张白纸，你疯狂地翻过书籍，没有半点字迹。</p><p>而在你没有看到的背后，床头花瓶中，一片枯萎的花瓣轻轻飘落地面。</p><p>你抬头望着窗外，长长地吐了一口气。</p><p>满是血丝的眼睛望着夕阳一眨不眨，直到眼中流出泪水。</p><p>多番死亡的痛苦早已在你心底积蓄起汹涌的暗流，你长久被压抑的怒火像是火山中滚动的岩浆。为什么是我，为什么是我，为什么我要承担这一切，你这么想着，竟然疯狂地笑了出来。</p><p>很快，随着窗外两只鸽子飞过，笑声戛然而止。</p><p>你像是想通了什么，就那么静静地站着。</p><p>背影孤独而决绝。</p><p><strong>时间【6：30】</strong></p><p>你的父母准时「下班回家」，你没有呆在房间，反而一反常态，微笑向前迎去，然后在他们不敢置信的表情中将水果刀送入他们的心脏，在血压下，血流像是一道红色的匹练在空中翻飞。</p><p>当血液流尽，他们就像两道黑色的影子，随着灰烬一点点消散在风里。</p><p>不知道是不是错觉，你隐约看到他们在笑。</p><p>他们在笑什么？</p><p>你带着疑惑，拎着滴血的刀出门，没有多说一句话。</p><p>接着你看到更多的匹练，在你越发模糊的视线中，人群变成了一个个奇怪的色块，你只需要对准这些色块的心脏下刀，就能将之消除，血液的颜色也开始变化，开始是红色，接着是蓝色、绿色、黄色……最后你看到一道道彩虹喷薄，挂满了你的眼睛。</p><p>真美啊，你这么想到。</p><p>而另一面，随着你走过，身后单元楼的墙皮开始寸寸风化脱落，树叶也开始凋零，当你终于来到在别墅门前时，整个小区彻底崩塌成废墟，轰隆一声，烟尘遮蔽了天空。</p><p>你一步没有停留。</p><h3 id="十"><a href="#十" class="headerlink" title="十"></a>十</h3><p>踏进门的一刻，你朦胧的视线终于彻底陷入黑暗。</p><p>但你却觉得这比看得见更为安心，这本就是你习惯的颜色。</p><p>不知道走了多久，你眼前出现了一抹光亮。</p><p>接着，光亮炸开，整个世界漂白一片，像是胶卷扭转了底色，又像是透白的 X 光底片。</p><p>世界只剩黑白两色。</p><p>你模糊地认出，这是一处大厅，两边各有八排长椅，正前方是一处讲台，讲台后面的墙壁上是一幅巨大的基督像。</p><p>这是别墅内的教堂？</p><p>你静静地看着。</p><p>眼前白光再次闪过，你看到整个教堂内都坐满了人影，身穿黑袍的神父在念诵《圣经》。</p><p>人群静穆沉默，只有神父的声音在教堂内回荡。</p><p>恍惚中，你突然觉得这幅场景似曾相识。</p><p>低沉的悉索声从背后传来，打断了你的回忆，你转身看到无数爬山虎从门口钻进来，扭动着触须四处蔓延，不知为何，你心底油然生出一种恐惧，你冲着人群大喊：跑啊，快跑啊！</p><p>但他们好像看不到你，没有理会，你试着用手去推，却发现手掌径直穿过了他们的身体，你像是空气里的一个幽灵。</p><p>爬山虎很快爬满了教堂，硕大的叶片抖动着，瞬间燃成火苗，汹涌的烈焰吞噬了教堂。</p><p>人群这才开始慌乱，争先恐后地向外跑，神父丢掉《圣经》，情侣各自奔逃，你甚至还看到一对夫妻与孩子被人群挤散，孩子在火焰中大声喊着爸爸妈妈，却无人应答，浓烟和动乱中，孩子撕心裂肺的痛哭和咳嗽，泪水与鼻涕同时咳出……最后你看到的是孩子无助的面孔被火焰吞噬。</p><p>你感到脸上有些凉，伸手却摸到了泪水。</p><p>我在哭？你心情莫名低落：那个孩子是谁，为什么这么熟悉？</p><p>再一睁眼，你发现已经处于一个新的场景，这里是处小学，许多孩子围着一个小瞎子指指点点，无情嘲笑，有调皮的小男孩上前夺走了小瞎子的盲杖，甚至在小瞎子恐惧地在地面摸索、央求他们时将之绊倒在地，以此激起人群更大的哄笑声。</p><p>人群散开，小瞎子就这样在操场上呆了整整一天才被老师发现。</p><p>你就这样看着一切发生，却无能为力。</p><p>只有紧握的双拳暴露了你的心情，你在生气吗？</p><p><strong>这是我吗？</strong></p><p>画面再次转换，这次的场景你令你确认了答案，眼前正是你熟悉地不能再熟悉的卧室。</p><p>你看到母亲买了你此前最想要的科比海报，一点点把海报上的细节讲给你听，你却哭着把它撕得粉碎；你看到父亲买了全套的童话书，每天晚上都温声细语地讲给你听，可你只是哭，把书籍扔得满地都是。你看到母亲经常起个大早去给你买新鲜的花，只为了你起床后能闻到短暂的清香，可你从没接受，你肆无忌惮地埋怨着他们，怨恨着他们把你丢在火海中，怨毒的话脱口而出。</p><p>他们只是沉默。</p><p>再然后，你好像长大了一些，却愈发沉默寡言了，你不再出门，也没有朋友，甚至连父母都不再说话，你害怕人群，恐惧别人异样的眼光，你害怕父母，害怕那个被父母弄丢的教堂，那里本应充满圣光，你却丢了眼睛。你常常蹲在墙角，瑟瑟发抖，时间就这样一天天过去。</p><p>……</p><p>你长成了大人，但好像更不爱说话了，在外人看来，你时常发呆，经常一发呆就是一天，但只有你自己知道他在自己脑海中构建了一个多么美好的世界，这个世界的你虽然仍旧看不到，但有个和谐的家庭，和父母也是无话不谈，你会和楼下的小姐姐聊天，也会时常下楼去和老头老太一起唠嗑听书，这个世界是黑暗的，对你却是光明的。久而久之，潜意识中，你甚至开始害怕重新看到光明。</p><p>对你而言，光明是那个充满着孤独、嘲笑、肮脏的危险世界。</p><p>你给自己重新拟定了身份，封闭了以前的记忆，对你而言痛苦不堪的记忆。</p><p>你叹了口气，忍不住闭上眼。</p><p>再睁开眼，又是新的场景，你好像来到了一处医院。</p><p>病房内，医生护士进进出出。</p><p>你看到身穿同样病服的母亲对着你絮絮叨叨着：父亲因为跑长途出了意外，自己日夜操劳也终于累倒，老病旧伤一概复发，眼看也活不过几天。但好在最后时刻，还能借着别人赔付的大笔钱交上手术费，把自己的角膜换给你。</p><p>这笔钱术后还能剩下一些，足够你一段时间的花销，后事自己也已全部安排妥当，你不必担心。</p><p>你的手术是下午【5：45】，在打过麻药后，你被推进了手术室。</p><p>朦朦胧胧中，你终于睡了过去。</p><p>画面到此为止。</p><h3 id="十一"><a href="#十一" class="headerlink" title="十一"></a>十一</h3><p>黑白色的世界浮现一颗微弱的光点，接着是一片灿烂的光。</p><p>你终于从那个世界中逃离。</p><p>缠眼的纱布被一圈圈解开，时隔多年，你终于再次看到了这个世界。</p><p>只是你的眼睛却止不住地流泪。</p><p>出院后，你第一个地方去的就是父母的墓地，因为路程遥远，来回花了很久。</p><p>你站在墓前，什么话都说不出来。</p><p>当你再次转动钥匙打开家门，已是傍晚时分，黄昏的光透过窗户照进来，一片昏黄。</p><p>家里没有人，显得有些冷清。</p><p>你走进卧室，第一眼看到的就是墙壁上已经泛黄的科比海报，它被胶带缝缝补补，呈现一种滑稽的姿态；书桌上摆放着一整套童话故事，不少书页都泛着褶皱，看起来像是翻了很多次，但吹去灰尘后封面却依旧崭新，看得出书的主人很宝贵它们，不忍心弄脏。</p><p>光线透过窗户上照进来，尘埃在光里起起伏伏。</p><p>光前则是枯萎的康乃馨。</p><p>你像是想到了什么，拉开抽屉，果然在里面发现了一个收音机。</p><p>你坐在椅子上，对着黄昏按下了播放键。</p><p>里面传来了熟悉的声音。</p><p><strong>「咱说相声呀，相声讲究四门功课。」</strong></p><p><strong>「对。」</strong></p><p><strong>「四门功课，坑、蒙、拐、骗！」</strong></p><p><strong>「什么？」</strong></p><p><strong>「哦，说、学、逗、唱！」</strong></p><p><strong>「嗐！」</strong></p><p>……</p><hr><p>我来交阅读理解了X，感觉应该分析的不对，不过是我自己感觉哈。</p><p>死亡轮回的场景并不是真实发生的，而是主角大脑制造出的美好世界的崩坏。(手术开始的时间是下午5:45，而主角每次重生后看到的时间也是下午5:45)</p><p>在这个场景里的父母以及其他人充满着主角内心对外界光明的恐惧，他们是主角意识创造出的“保护”主角的人，潜意识告诉他们，主角不能看见光明，这个美好的幻想世界将无法美好。所以他们做出来的行动只有观察主角是否能看的见，如果发现主角恢复了视力，就会立刻“杀死”他。</p><p>场景中所有人都害怕石桥另一边的教堂，因为那里有着主角童年的痛苦回忆，毕竟整个场景出现在主角的想象里，这座教堂是主角最害怕，最抗拒的东西，即使是场景中的“保护者”也没有办法靠近。</p><p>场景里的主角没有现实中的痛苦记忆，虽然潜意识抗拒，但他意识到想要逃离就必须要去那个别墅，也就代表着他唯一的美好世界要破灭了，他还是没有做到，并且感受到了绝望的窒息。</p><p>场景中的主角终于受不了了，他只想杀光所有“保护者”，代表着他告诉幻想，他想要接受现实。“保护者”先是惊讶他会这么做，这是他们意料之外的事情，但随后，他们笑了。并且不再是带有扭曲的笑脸。场景中的主角没有痛苦的记忆，只是想要从轮回中解脱，在逐渐抽象的视力下，他亲手摧毁了幻想世界，并找到了记忆。而在现实中，他冲破了内心的防线，接受了现实，也接受了光明的世界。</p><p>他以第三人称(我推测是通过父母的灵魂)看到了自己的记忆，原来，父母对自己很愧疚，在尽力弥补、拯救自己，而面对黑暗(双层意义)的世界，自己却只能感受到父母的无情，肆无忌惮地怨恨着、害怕着他们，靠幻想来创造自己希望的父母和整个世界。并且最后，父母用生命换来了他的前途与未来。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>无题</title>
      <link href="2021/03/27/jian-san/"/>
      <url>2021/03/27/jian-san/</url>
      
        <content type="html"><![CDATA[<p>以前玩剑三的时候，游戏亲友里有很多对情缘，就是游戏里认识的男女朋友。恋人们面都没见过一面，就爱的死去活来，哭的稀里哗啦。</p><p>不玩游戏的朋友听了都莫名其妙，游戏不是用来玩的吗，至于吗。</p><p>是，我们当然知道游戏是假的。</p><p>可是怎么说呢。</p><p>你上了一天班，工作出了失误，在会上被领导劈头盖脸的骂了一通，说爱干不干不干拉倒。一整天所有同事都用半同情半看戏的眼神看你。好不容易下班回到自己的小屋，又听到隔壁情侣在打情骂俏。你觉得孤单，拿起手机想找个人说话，发了两条信息都没有回复。</p><p>你不怪她们，大家都忙着生活。</p><p>现实是真的，可它太冷了。</p><p>无人回应的你打开游戏进了副本。结果今天大概真的背运，boss一个技能忘了躲，眼睁睁看着血条刷刷地掉。耳机里传来团长的破口大骂，那个谁啊是第一次打吗不会就退，像极了白天的老板。</p><p>你觉得委屈，你关掉了麦克风，免得哭出声来被人听见。</p><p>屏幕突然闪过一道金色的光，你看见游戏里的自己被光芒笼罩。你的血量没有再降低，只是团队面板上，某个名字下的红色血线越来越短。</p><p>你记得这个技能的名字。</p><p>舍身诀。</p><p>最后队里有个和尚莫名其妙的死了，被骂的人变成了他。</p><p>他在团队频道里打了个 sorry</p><p>下一秒密聊频道叮的一声，是那个躺在地上惨兮兮的人，给你发来一个笑脸。</p><p>今天你遇到过很多人，这是你看到的第一个笑脸。</p><p>是，游戏是假的，他死了过会儿也能复活。</p><p>你也不知道他长什么样多大了叫什么名字。</p><p>可这一刻，你会不会有一点点动心。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>看风水</title>
      <link href="2021/03/27/kan-feng-shui/"/>
      <url>2021/03/27/kan-feng-shui/</url>
      
        <content type="html"><![CDATA[<h1 id="看风水"><a href="#看风水" class="headerlink" title="看风水"></a>看风水</h1><p>赵子豪做生意发了财，花钱在郊区买了块地，修了栋三层的别墅，花园泳池很是气派，后院更有一株百年荔枝树，当初买地就是看中了这棵树，谁叫他老婆喜欢吃荔枝呢。</p><p>装修期间，朋友劝他找个风水先生看看，以免犯煞。原本不怎么信这套的赵子豪，这次居然表示赞同，专程去香港请了个大师。</p><p>大师姓曹，从事这一行三十余年，圈内很有名气。</p><p>在市里吃过饭，赵子豪开车载着曹大师前往郊区。一路上，如果后头有车要超，赵子豪都是避让。</p><p>曹大师笑道：“赵老板开车挺稳当呢。”虽然是香港人，一口普通话还算流利。</p><p>赵子豪哈哈一笑：“要超车的多半有急事，可不能耽误他们。”</p><p>行至小镇，街道远比市内要狭窄，赵子豪放慢了车速。</p><p>一名小孩嬉笑着从巷子里冲了出来，赵子豪一脚刹车堪堪避开，小孩笑嘻嘻的跑过去以后，他并没有踩油门前行，而是看着巷子口，似乎在等着什么，片刻，又有一名小孩冲了出来，追赶着先前那名小孩远去。</p><p>曹大师讶然问，“你怎么知道后头还有小孩？”</p><p>赵子豪耸耸肩，“小孩子都是追追打打，光是一个人他可不会笑得这么开心。”</p><p>曹大师竖起了大拇指，笑道：“有心。”</p><p>到了别墅，刚下车，后院突然飞起七八只鸟，见状，赵子豪停在门口，抱歉的冲曹大师说道：“麻烦大师在门口等一会。”</p><p>“有什么事吗？”曹大师再次讶然。</p><p>“后院肯定有小孩在偷摘荔枝，我们现在进去，小孩自然惊慌，万一掉下来就不好了。”赵子豪笑着说道。</p><p>曹大师默然片刻，“你这房子的风水不用看了。”</p><p>这次轮到赵子豪讶然了，“大师何出此言？”</p><p>“有您在的地方，都是风水吉地。”</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建教程（目录）</title>
      <link href="2020/10/18/bo-ke-da-jian-jiao-cheng-mu-lu/"/>
      <url>2020/10/18/bo-ke-da-jian-jiao-cheng-mu-lu/</url>
      
        <content type="html"><![CDATA[<h1 id="博客搭建教程（目录）"><a href="#博客搭建教程（目录）" class="headerlink" title="博客搭建教程（目录）"></a>博客搭建教程（目录）</h1><h2 id="1-博客搭建"><a href="#1-博客搭建" class="headerlink" title="1.博客搭建"></a>1.博客搭建</h2><h3 id="1-1Hexo-github-搭建博客-超级详细版，精细入微-——by-yafine"><a href="#1-1Hexo-github-搭建博客-超级详细版，精细入微-——by-yafine" class="headerlink" title="1.1Hexo+github 搭建博客 (超级详细版，精细入微)——by  yafine"></a>1.1<a href="https://yafine-blog.cn/posts/4ab2.html">Hexo+github 搭建博客 (超级详细版，精细入微)——by  yafine</a></h3><p>​          <a href="https://github.com/Yafine">https://github.com/Yafine</a></p><hr><h3 id="1-2-1基于-Hexo-GitHub-从零开始搭建个人博客（一）：环境准备篇——by-sitoi"><a href="#1-2-1基于-Hexo-GitHub-从零开始搭建个人博客（一）：环境准备篇——by-sitoi" class="headerlink" title="1.2.1基于 Hexo GitHub 从零开始搭建个人博客（一）：环境准备篇——by  sitoi"></a>1.2.1<a href="https://sitoi.cn/posts/6666.html">基于 Hexo GitHub 从零开始搭建个人博客（一）：环境准备篇——by  sitoi</a></h3><h3 id="1-2-2基于-Hexo-GitHub-从零开始搭建个人博客（二）：搭建基础篇"><a href="#1-2-2基于-Hexo-GitHub-从零开始搭建个人博客（二）：搭建基础篇" class="headerlink" title="1.2.2基于 Hexo GitHub 从零开始搭建个人博客（二）：搭建基础篇"></a>1.2.2<a href="https://sitoi.cn/posts/27801.html">基于 Hexo GitHub 从零开始搭建个人博客（二）：搭建基础篇</a></h3><h3 id="1-2-3基于-Hexo-GitHub-从零开始搭建个人博客（三）：Matery-主题（DIY-版）详细配置教程，附博客源码"><a href="#1-2-3基于-Hexo-GitHub-从零开始搭建个人博客（三）：Matery-主题（DIY-版）详细配置教程，附博客源码" class="headerlink" title="1.2.3基于 Hexo GitHub 从零开始搭建个人博客（三）：Matery 主题（DIY 版）详细配置教程，附博客源码"></a>1.2.3<a href="https://sitoi.cn/posts/63466.html">基于 Hexo GitHub 从零开始搭建个人博客（三）：Matery 主题（DIY 版）详细配置教程，附博客源码</a></h3><h3 id="1-2-4基于-Hexo-GitHub-从零开始搭建个人博客（四）：让你的博客完美支持-PWA"><a href="#1-2-4基于-Hexo-GitHub-从零开始搭建个人博客（四）：让你的博客完美支持-PWA" class="headerlink" title="1.2.4基于 Hexo GitHub 从零开始搭建个人博客（四）：让你的博客完美支持 PWA"></a>1.2.4<a href="https://sitoi.cn/posts/49115.html">基于 Hexo GitHub 从零开始搭建个人博客（四）：让你的博客完美支持 PWA</a></h3><h3 id="1-2-5基于-Hexo-GitHub-从零开始搭建个人博客（五）：自动部署篇"><a href="#1-2-5基于-Hexo-GitHub-从零开始搭建个人博客（五）：自动部署篇" class="headerlink" title="1.2.5基于 Hexo GitHub 从零开始搭建个人博客（五）：自动部署篇"></a>1.2.5<a href="https://sitoi.cn/posts/15908.html">基于 Hexo GitHub 从零开始搭建个人博客（五）：自动部署篇</a></h3><p>​          <a href="https://github.com/Sitoi/">https://github.com/Sitoi/</a></p><hr><h3 id="1-3Hexo-Github博客搭建完全教程——by-shw2018（洪卫）"><a href="#1-3Hexo-Github博客搭建完全教程——by-shw2018（洪卫）" class="headerlink" title="1.3Hexo+Github博客搭建完全教程——by  shw2018（洪卫）"></a>1.3<a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程——by  shw2018（洪卫）</a></h3><p>​          <a href="https://github.com/shw2018/">https://github.com/shw2018/</a></p><hr><h3 id="1-4Hexo-Github博客-butterfly和matery主题搭建完全教程【整理】——by-yangchaoyi"><a href="#1-4Hexo-Github博客-butterfly和matery主题搭建完全教程【整理】——by-yangchaoyi" class="headerlink" title="1.4Hexo+Github博客 butterfly和matery主题搭建完全教程【整理】——by  yangchaoyi"></a>1.4<a href="https://yangchaoyi.vip/posts/520520">Hexo+Github博客 butterfly和matery主题搭建完全教程【整理】——by  yangchaoyi</a></h3><p>​          <a href="https://github.com/Chocolate1999">https://github.com/Chocolate1999</a></p><hr><h3 id="1-5脚本一键安装部署hexo博客"><a href="#1-5脚本一键安装部署hexo博客" class="headerlink" title="1.5脚本一键安装部署hexo博客"></a>1.5<a href="https://hexoscript.gitbook.io/hexo-script/v/1.3-1/">脚本一键安装部署hexo博客</a></h3><p>​          <a href="https://hexoscript.github.io/">https://hexoscript.github.io/</a></p><hr><h2 id="2-注意事项"><a href="#2-注意事项" class="headerlink" title="2.注意事项"></a>2.注意事项</h2><h3 id="2-1必须在-md文章开头输入标题、时间等内容，否则hexo-g时，会出现因中文而乱码的情况"><a href="#2-1必须在-md文章开头输入标题、时间等内容，否则hexo-g时，会出现因中文而乱码的情况" class="headerlink" title="2.1必须在.md文章开头输入标题、时间等内容，否则hexo g时，会出现因中文而乱码的情况"></a>2.1必须在.md文章开头输入标题、时间等内容，否则hexo g时，会出现因中文而乱码的情况</h3><h3 id="2-2二级标题及以下为目录，注意一级标题不会显示为目录"><a href="#2-2二级标题及以下为目录，注意一级标题不会显示为目录" class="headerlink" title="2.2二级标题及以下为目录，注意一级标题不会显示为目录"></a>2.2二级标题及以下为目录，注意一级标题不会显示为目录</h3><hr><h2 id="3-网站迁移"><a href="#3-网站迁移" class="headerlink" title="3.网站迁移"></a>3.网站迁移</h2><p>需要重新搭建环境，拷贝站点文件夹。  </p><p>一定要保护好站点文件夹</p><p>一定要保护好站点文件夹</p><p>一定要保护好站点文件夹</p><hr><h2 id="4-补充参考文章"><a href="#4-补充参考文章" class="headerlink" title="4.补充参考文章"></a>4.补充参考文章</h2><p>​          <a href="https://www.simon96.online/2018/10/12/hexo-tutorial/">【持续更新】最全Hexo博客搭建+主题优化+插件配置+常用操作+错误分析</a>  </p><p>​          <a href="https://zhuanlan.zhihu.com/p/56943330">[Markdown] 使用vscode开始Markdown写作之旅</a></p><p>​          <a href="https://www.jianshu.com/p/b03a8d7b1719">Markdown 语法整理大集合2017</a></p><p>​          <a href="https://www.jianshu.com/p/8c1b2b39deb0">Markdown 语法手册完整整理</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>个人博客搭建</title>
      <link href="2020/10/17/ge-ren-bo-ke-da-jian-xin/"/>
      <url>2020/10/17/ge-ren-bo-ke-da-jian-xin/</url>
      
        <content type="html"><![CDATA[<h1 id="最快速地搭建炫丽的个人网站or博客"><a href="#最快速地搭建炫丽的个人网站or博客" class="headerlink" title="最快速地搭建炫丽的个人网站or博客"></a>最快速地搭建炫丽的个人网站or博客</h1><h2 id="1-nodejs，Git环境搭建（全程管理员身份运行）："><a href="#1-nodejs，Git环境搭建（全程管理员身份运行）：" class="headerlink" title="1.nodejs，Git环境搭建（全程管理员身份运行）："></a>1.nodejs，Git环境搭建（全程管理员身份运行）：</h2><ul><li><p><a href="https://blog.csdn.net/zhangkaidsy/article/details/86645070">nodejs搭建教程</a><br>需要注意的是，创建的两个文件夹的名称为：【node_global】;【node_cache】  </p><p>系统环境变量创建时，【node_modules】文件夹不需要手动创建，系统会自动创建(详见下图)<br><img src="https://img-blog.csdnimg.cn/20190530161206918.png">  </p></li><li><p><a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">git搭建教程</a></p></li><li><p><a href="https://www.cnblogs.com/luyuandatabase/p/12145707.html">配置淘宝云镜像（加速下载）</a></p></li><li><p>配置Git的用户信息：<br>git config –global user.name “GitHub用户名”<br>git config –global user.email “GitHub邮箱”</p></li></ul><p>——以下内容仅在脚本无法使用的情况下阅读——</p><hr><ul><li><a href="https://jingyan.baidu.com/article/e8cdb32b0ce12137042bad51.html">补充参考文档</a></li></ul><ul><li>生成ssh密钥文件<br>ssh-keygen -t rsa -C “Github邮箱”<br>将刚新生成的公钥id_rsa.pub添加到Github中<br>完了以后使用命令ssh <a href="mailto:&#103;&#105;&#116;&#64;&#103;&#x69;&#x74;&#104;&#x75;&#x62;&#x2e;&#99;&#111;&#x6d;">&#103;&#105;&#116;&#64;&#103;&#x69;&#x74;&#104;&#x75;&#x62;&#x2e;&#99;&#111;&#x6d;</a>测试<br>显示【Hi!用户名……】时即为成功</li></ul><hr><h2 id="2-注册Github帐号并添加ssh密钥"><a href="#2-注册Github帐号并添加ssh密钥" class="headerlink" title="2.注册Github帐号并添加ssh密钥"></a>2.注册Github帐号并添加ssh密钥</h2><ul><li><a href="https://www.xuanfengge.com/using-ssh-key-link-github-photo-tour.html">使用SSH密钥连接Github</a></li></ul><hr><h2 id="3-快速利用hexo搭建博客："><a href="#3-快速利用hexo搭建博客：" class="headerlink" title="3.快速利用hexo搭建博客："></a>3.快速利用hexo搭建博客：</h2><ul><li><p><a href="https://hexoscript.gitbook.io/hexo-script/">使用脚本（中文可选）</a><br>注：该脚本包含上传本地博客至Github、ssh密钥生成等功能</p></li><li><p><a href="https://github.com/blinkfox/hexo-theme-matery">matery主题官网</a></p></li><li><p><a href="https://blog.csdn.net/jspnetcn/article/details/104111651">matery主题安装及优化</a></p></li></ul><hr><h2 id="4-网站迁移"><a href="#4-网站迁移" class="headerlink" title="4.网站迁移"></a>4.网站迁移</h2><p>需要重新搭建环境，拷贝站点文件夹。  </p><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><h3 id="一定要保护好站点文件夹"><a href="#一定要保护好站点文件夹" class="headerlink" title="一定要保护好站点文件夹"></a>一定要保护好站点文件夹</h3><h3 id="一定要保护好站点文件夹-1"><a href="#一定要保护好站点文件夹-1" class="headerlink" title="一定要保护好站点文件夹"></a>一定要保护好站点文件夹</h3><h3 id="一定要保护好站点文件夹。"><a href="#一定要保护好站点文件夹。" class="headerlink" title="一定要保护好站点文件夹。"></a>一定要保护好站点文件夹。</h3><hr><h2 id="5-可供参考的文章"><a href="#5-可供参考的文章" class="headerlink" title="5.可供参考的文章"></a>5.可供参考的文章</h2><ul><li><p><a href="https://www.simon96.online/2018/10/12/hexo-tutorial/">【持续更新】最全Hexo博客搭建+主题优化+插件配置+常用操作+错误分析</a>  </p></li><li><p><a href="https://zhuanlan.zhihu.com/p/56943330">[Markdown] 使用vscode开始Markdown写作之旅</a></p></li><li><p><a href="https://www.jianshu.com/p/b03a8d7b1719">Markdown 语法整理大集合2017</a></p></li><li><p><a href="https://www.jianshu.com/p/8c1b2b39deb0">Markdown 语法手册完整整理</a></p></li></ul><hr><h2 id="6-重要提示"><a href="#6-重要提示" class="headerlink" title="6.重要提示"></a>6.重要提示</h2><ul><li>必须在.md文章开头输入标题、时间等内容，否则hexo g时，会出现因中文而乱码的情况</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/10/17/hello-world/"/>
      <url>2020/10/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
